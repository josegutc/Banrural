<Activity mc:Ignorable="sap sap2010" x:Class="EditWordSignature" this:EditWordSignature.Agencia="1" this:EditWordSignature.Cliente="Frander Ivan Pérez Juárez " this:EditWordSignature.Carne="T202111380" this:EditWordSignature.Boleta="79400792 " this:EditWordSignature.Dia="15" this:EditWordSignature.Mes="12" this:EditWordSignature.Anio="2020" this:EditWordSignature.Monto="475.00" this:EditWordSignature.Empresa="PAGO TELGUA EN LINEA" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.uipath.com/workflow/activities/word" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Agencia" Type="InArgument(x:String)" />
    <x:Property Name="Cliente" Type="InArgument(x:String)" />
    <x:Property Name="Carne" Type="InArgument(x:String)" />
    <x:Property Name="Boleta" Type="InArgument(x:String)" />
    <x:Property Name="Dia" Type="InArgument(x:String)" />
    <x:Property Name="Mes" Type="InArgument(x:String)" />
    <x:Property Name="Anio" Type="InArgument(x:String)" />
    <x:Property Name="Monto" Type="InArgument(x:String)" />
    <x:Property Name="Empresa" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1192,5015</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>EditWordSignature_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Word</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Word.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>UiPath.Word.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="EditWordSignature" sap:VirtualizedContainerService.HintSize="765,4830" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="15 de julio de 2021" Name="FechaHoy" />
      <Variable x:TypeArguments="x:String" Default="15 de Diciembre del 2020" Name="Fecha" />
      <Variable x:TypeArguments="x:String" Default="CUATROCIENTOS SETENTA Y CINCO QUETZALES CON 00/100 ( Q. 475.00 )" Name="Valor" />
      <Variable x:TypeArguments="x:String" Default="Byron Vicente" Name="NombreFirma" />
      <Variable x:TypeArguments="x:String" Default="Coordinador Cobros por Cuenta Ajena" Name="PuestoFirma" />
      <Variable x:TypeArguments="x:String" Default="2339-8888" Name="TelFirma" />
      <Variable x:TypeArguments="x:String" Default="303293" Name="ExtFirma" />
      <Variable x:TypeArguments="x:Double" Name="MontoDec" />
      <Variable x:TypeArguments="x:Int32" Name="MontoInt" />
      <Variable x:TypeArguments="sd:DataTable" Name="DataTable" />
      <Variable x:TypeArguments="x:String" Name="AgenciaNom" />
      <Variable x:TypeArguments="x:String" Default="Cuenta" Name="Referencia" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:Delete ContinueOnError="True" sap:VirtualizedContainerService.HintSize="723,22" sap2010:WorkflowViewState.IdRef="Delete_1" Path="C:\Users\Propa34653\Desktop\EY\Banrural\Automatizacion_Banrural\Data\Input\Ejemplos de certificaciones.docx" />
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="723,260" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" Visible="False" WorkbookPath="C:\Users\Propa34653\Desktop\EY\LISTADO DE AGENCIAS.xlsx">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Hacer" sap:VirtualizedContainerService.HintSize="376,151" sap2010:WorkflowViewState.IdRef="Sequence_6">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelReadRange AddHeaders="True" DataTable="[DataTable]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="Hoja2">
              <ui:ExcelReadRange.Range>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </ui:ExcelReadRange.Range>
            </ui:ExcelReadRange>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
    <ui:LookupDataTable LookupColumnName="{x:Null}" LookupDataColumn="{x:Null}" RowIndex="{x:Null}" TargetColumnName="{x:Null}" TargetDataColumn="{x:Null}" DataTable="[DataTable]" DisplayName="Lookup Data Table" sap:VirtualizedContainerService.HintSize="723,22" sap2010:WorkflowViewState.IdRef="LookupDataTable_1" LookupColumnIndex="[0]" LookupValue="[Trim(Agencia)]" TargetColumnIndex="[1]">
      <ui:LookupDataTable.CellValue>
        <OutArgument x:TypeArguments="x:String">[AgenciaNom]</OutArgument>
      </ui:LookupDataTable.CellValue>
    </ui:LookupDataTable>
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="723,260" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000" Visible="False" WorkbookPath="C:\Users\Propa34653\Desktop\EY\REFERENCIAS  EN CERTIFICACIONES.xlsx">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Hacer" sap:VirtualizedContainerService.HintSize="376,151" sap2010:WorkflowViewState.IdRef="Sequence_7">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelReadRange AddHeaders="True" DataTable="[DataTable]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" SheetName="Hoja2">
              <ui:ExcelReadRange.Range>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </ui:ExcelReadRange.Range>
            </ui:ExcelReadRange>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
    <ui:LookupDataTable LookupColumnName="{x:Null}" LookupDataColumn="{x:Null}" RowIndex="{x:Null}" TargetColumnName="{x:Null}" TargetDataColumn="{x:Null}" DataTable="[DataTable]" DisplayName="Lookup Data Table" sap:VirtualizedContainerService.HintSize="723,22" sap2010:WorkflowViewState.IdRef="LookupDataTable_2" LookupColumnIndex="[0]" LookupValue="[Trim(Empresa)]" TargetColumnIndex="[1]">
      <ui:LookupDataTable.CellValue>
        <OutArgument x:TypeArguments="x:String">[Referencia]</OutArgument>
      </ui:LookupDataTable.CellValue>
    </ui:LookupDataTable>
    <If Condition="[IsNothing( Referencia )]" sap:VirtualizedContainerService.HintSize="723,208" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Then>
        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_7">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[Referencia]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">Cuenta</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
    </If>
    <ui:CopyFile ContinueOnError="True" Destination="C:\Users\Propa34653\Desktop\EY\Banrural\Automatizacion_Banrural\Data\Input" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="723,157" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="False" Path="Data\Input\Plantilla\Ejemplos de certificaciones.docx" />
    <p:WordApplicationScope DisplayName="Word Application Scope" FilePath="C:\Users\Propa34653\Desktop\EY\Banrural\Automatizacion_Banrural\Data\Input\Ejemplos de certificaciones.docx" sap:VirtualizedContainerService.HintSize="723,3507" sap2010:WorkflowViewState.IdRef="WordApplicationScope_1">
      <p:WordApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WordDocument">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WordDocument" Name="WordDocumentScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Hacer" sap:VirtualizedContainerService.HintSize="689,3398" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke TraductorMes workflow" sap:VirtualizedContainerService.HintSize="647,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="TraductorMes.XAML">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="Mes">[Mes]</InArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="MesNom">[Mes]</OutArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <Assign sap:VirtualizedContainerService.HintSize="647,60" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[Fecha]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[Dia + " de "+ Mes + " del "+Anio]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke TraductorMes workflow" sap:VirtualizedContainerService.HintSize="647,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="TraductorMes.XAML">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="Mes">[DateAndTime.Today.Month.ToString()]</InArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="MesNom">[Mes]</OutArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <Assign sap:VirtualizedContainerService.HintSize="647,60" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[FechaHoy]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[DateAndTime.Today.Day.ToString() + " de "+ Mes +" del "+DateAndTime.Today.Year.ToString()]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="647,781" sap2010:WorkflowViewState.IdRef="CommentOut_1">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Actividades ignoradas" sap:VirtualizedContainerService.HintSize="611,703" sap2010:WorkflowViewState.IdRef="Sequence_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="569,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Double">[MontoDec]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Double">[Double.Parse(Monto)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="569,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[MontoInt]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[Int32.Parse(MontoDec)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim Amt_Before_Decimal, Amt_After_Decimal, Country_currency, Decimal_Singular, Decimal_Plural As String&#xD;&#xA;Dim  DecimalCount, DecimalCount_1, DecimalCount_10 As String&#xD;&#xA;Dim Before_Amt, After_Amt As String&#xD;&#xA;Dim DecimalPlace As Int32&#xD;&#xA;&#xD;&#xA;MyNumber = Trim(Str(MyNumber)) ' String representation of amount.&#xD;&#xA;&#xD;&#xA;DecimalPlace = InStr(MyNumber, &quot;.&quot;) ' Position of decimal place 0 if none.&#xD;&#xA;&#xD;&#xA;If DecimalPlace &gt; 1  Then&#xD;&#xA;Before_Amt = left(MyNumber,DecimalPlace-1)&#xD;&#xA;Else If DecimalPlace = 0 And len(MyNumber) &gt; 0 Then&#xD;&#xA;Before_Amt = MyNumber&#xD;&#xA;Else Before_Amt = &quot;&quot;&#xD;&#xA;End If&#xD;&#xA;Num2Word = Before_Amt&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;'''''''''''''' VARIABLES FOR NUMBERS '''''''''''''''''''&#xD;&#xA;&#xD;&#xA;Dim Digit, GetDigit, Tens, GetTens, Hundreds, GetHundreds As String&#xD;&#xA;&#xD;&#xA;Dim Thousands, GetThousands, GetThousands_1, GetThousands_10, GetThousands_100 As String&#xD;&#xA;&#xD;&#xA;Dim Millions, GetMillions, GetMillions_1, GetMillions_10, GetMillions_100 As String&#xD;&#xA;&#xD;&#xA;Dim Billions, GetBillions, GetBillions_1, GetBillions_10, GetBillions_100 As String&#xD;&#xA;&#xD;&#xA;Dim Trillions, GetTrillions, GetTrillions_1, GetTrillions_10, GetTrillions_100 As String&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;''''''''''''''''''''''''''''''''''''''''''''''''''''''&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;'''''''''''''''''''' ONES ''''''''''''''''''''''''''''&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;If Len(Before_Amt)=1 Or (Left(right(Before_Amt,2),1)= &quot;0&quot; Or Left(right(Before_Amt,2),1)&lt;&gt; &quot;1&quot;) Then&#xD;&#xA;Digit = Right(Before_Amt,1)&#xD;&#xA;Select Case Digit&#xD;&#xA; Case &quot;1&quot; : GetDigit=&quot;One&quot;&#xD;&#xA; Case &quot;2&quot; : GetDigit=&quot;Two&quot;&#xD;&#xA; Case &quot;3&quot; : GetDigit=&quot;Three&quot;&#xD;&#xA; Case &quot;4&quot; : GetDigit=&quot;Four&quot;&#xD;&#xA; Case &quot;5&quot; : GetDigit=&quot;Five&quot;&#xD;&#xA; Case &quot;6&quot; : GetDigit=&quot;Six&quot;&#xD;&#xA; Case &quot;7&quot; : GetDigit=&quot;Seven&quot;&#xD;&#xA; Case &quot;8&quot; : GetDigit=&quot;Eight&quot;&#xD;&#xA; Case &quot;9&quot; : GetDigit=&quot;Nine&quot; &#xD;&#xA; Case Else: GetDigit = &quot;&quot;&#xD;&#xA; End Select&#xD;&#xA;End If&#xD;&#xA;&#xD;&#xA;''''''''''''''''''''''''''''''''''''''''''''''''''''''&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;'''''''''''''''''''' TENS ''''''''''''''''''''''''''''&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;If Len(Before_Amt)&gt;=2 And Left(right(Before_Amt,2),1)= &quot;1&quot; Then&#xD;&#xA;&#xD;&#xA;Tens = right(Before_Amt,2)&#xD;&#xA;&#xD;&#xA;Select Case Tens&#xD;&#xA; Case &quot;10&quot; : GetTens=&quot;Ten&quot;&#xD;&#xA; Case &quot;11&quot; : GetTens=&quot;Eleven&quot;&#xD;&#xA; Case &quot;12&quot; : GetTens=&quot;Twelve&quot;&#xD;&#xA; Case &quot;13&quot; : GetTens=&quot;Thirteen&quot;&#xD;&#xA; Case &quot;14&quot; : GetTens=&quot;Forteen&quot;&#xD;&#xA; Case &quot;15&quot; : GetTens=&quot;Fifteen&quot;&#xD;&#xA; Case &quot;16&quot; : GetTens=&quot;Sixteen&quot;&#xD;&#xA; Case &quot;17&quot; : GetTens=&quot;Seventeen&quot;&#xD;&#xA; Case &quot;18&quot; : GetTens=&quot;Eighteen&quot;&#xD;&#xA; Case &quot;19&quot; : GetTens=&quot;Nineteen&quot;&#xD;&#xA; Case Else : GetTens=&quot;&quot;&#xD;&#xA; End Select&#xD;&#xA;&#xD;&#xA;ElseIf Len(Before_Amt)&gt;=2 And Left(right(Before_Amt,2),1)&lt;&gt; &quot;1&quot; Then&#xD;&#xA;&#xD;&#xA;Tens = Left(right(Before_Amt,2),1)&#xD;&#xA;&#xD;&#xA;Select Case Tens&#xD;&#xA; Case &quot;2&quot; : GetTens=&quot;Twenty&quot;&#xD;&#xA; Case &quot;3&quot; : GetTens=&quot;Thirty&quot;&#xD;&#xA; Case &quot;4&quot; : GetTens=&quot;Fourty&quot;&#xD;&#xA; Case &quot;5&quot; : GetTens=&quot;Fifty&quot;&#xD;&#xA; Case &quot;6&quot; : GetTens=&quot;Sixty&quot;&#xD;&#xA; Case &quot;7&quot; : GetTens=&quot;Seventy&quot;&#xD;&#xA; Case &quot;8&quot; : GetTens=&quot;Eighty&quot;&#xD;&#xA; Case &quot;9&quot; : GetTens=&quot;Ninety&quot;&#xD;&#xA; Case Else : GetTens=&quot;&quot;&#xD;&#xA; End Select&#xD;&#xA; End If&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;''''''''''''''''''''''''''''''''''''''''''''''''''''''&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;''''''''''''''''' HUNDREDS '''''''''''''''''''''''''''&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;If Len(Before_Amt)&gt;=3 And Left(right(Before_Amt,3),1)&lt;&gt; &quot;0&quot; Then&#xD;&#xA;&#xD;&#xA;Hundreds = Left(right(Before_Amt,3),1)&#xD;&#xA;&#xD;&#xA;Select Case Hundreds&#xD;&#xA; Case &quot;1&quot; : GetHundreds=&quot;One&quot;&#xD;&#xA; Case &quot;2&quot; : GetHundreds=&quot;Two&quot;&#xD;&#xA; Case &quot;3&quot; : GetHundreds=&quot;Three&quot;&#xD;&#xA; Case &quot;4&quot; : GetHundreds=&quot;Four&quot;&#xD;&#xA; Case &quot;5&quot; : GetHundreds=&quot;Five&quot;&#xD;&#xA; Case &quot;6&quot; : GetHundreds=&quot;Six&quot;&#xD;&#xA; Case &quot;7&quot; : GetHundreds=&quot;Seven&quot;&#xD;&#xA; Case &quot;8&quot; : GetHundreds=&quot;Eight&quot;&#xD;&#xA; Case &quot;9&quot; : GetHundreds=&quot;Nine&quot; &#xD;&#xA; Case Else: GetHundreds = &quot;&quot;&#xD;&#xA; End Select&#xD;&#xA;End If&#xD;&#xA;&#xD;&#xA;If GetHundreds&lt;&gt;&quot;&quot; Then&#xD;&#xA;&#xD;&#xA;GetHundreds = GetHundreds &amp; &quot; Hundred&quot;&#xD;&#xA;&#xD;&#xA;End If&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;''''''''''''''''''''''''''''''''''''''''''''''''''''''&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;''''''''''''''''' THOUSANDS ''''''''''''''''''''''''''&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;If Len(Before_Amt)=4 Then&#xD;&#xA;&#xD;&#xA;Thousands = Left(right(Before_Amt,4),1)&#xD;&#xA;&#xD;&#xA;Select Case Thousands&#xD;&#xA; Case &quot;1&quot; : GetThousands_1=&quot;One&quot;&#xD;&#xA; Case &quot;2&quot; : GetThousands_1=&quot;Two&quot;&#xD;&#xA; Case &quot;3&quot; : GetThousands_1=&quot;Three&quot;&#xD;&#xA; Case &quot;4&quot; : GetThousands_1=&quot;Four&quot;&#xD;&#xA; Case &quot;5&quot; : GetThousands_1=&quot;Five&quot;&#xD;&#xA; Case &quot;6&quot; : GetThousands_1=&quot;Six&quot;&#xD;&#xA; Case &quot;7&quot; : GetThousands_1=&quot;Seven&quot;&#xD;&#xA; Case &quot;8&quot; : GetThousands_1=&quot;Eight&quot;&#xD;&#xA; Case &quot;9&quot; : GetThousands_1=&quot;Nine&quot;&#xD;&#xA; Case Else: GetThousands_1 = &quot;&quot;&#xD;&#xA; End Select&#xD;&#xA;&#xD;&#xA;Else If Len(Before_Amt)&gt; 4 And Left(right(Before_Amt,5),1)&lt;&gt; &quot;1&quot; Then&#xD;&#xA;&#xD;&#xA;Thousands = Left(right(Before_Amt,4),1)&#xD;&#xA;&#xD;&#xA;Select Case Thousands&#xD;&#xA; Case &quot;1&quot; : GetThousands_1=&quot;One&quot;&#xD;&#xA; Case &quot;2&quot; : GetThousands_1=&quot;Two&quot;&#xD;&#xA; Case &quot;3&quot; : GetThousands_1=&quot;Three&quot;&#xD;&#xA; Case &quot;4&quot; : GetThousands_1=&quot;Four&quot;&#xD;&#xA; Case &quot;5&quot; : GetThousands_1=&quot;Five&quot;&#xD;&#xA; Case &quot;6&quot; : GetThousands_1=&quot;Six&quot;&#xD;&#xA; Case &quot;7&quot; : GetThousands_1=&quot;Seven&quot;&#xD;&#xA; Case &quot;8&quot; : GetThousands_1=&quot;Eight&quot;&#xD;&#xA; Case &quot;9&quot; : GetThousands_1=&quot;Nine&quot;&#xD;&#xA; Case Else: GetThousands_1 = &quot;&quot;&#xD;&#xA; End Select&#xD;&#xA;&#xD;&#xA; End If&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;If Len(Before_Amt)&gt;=5 And Left(right(Before_Amt,5),1)&lt;&gt; &quot;0&quot; And Left(right(Before_Amt,5),1)= &quot;1&quot; Then&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Thousands = Left(right(Before_Amt,5),2)&#xD;&#xA;&#xD;&#xA;Select Case Thousands&#xD;&#xA; Case &quot;10&quot; : GetThousands_10=&quot;Ten&quot;&#xD;&#xA; Case &quot;11&quot; : GetThousands_10=&quot;Eleven&quot;&#xD;&#xA; Case &quot;12&quot; : GetThousands_10=&quot;Twelve&quot;&#xD;&#xA; Case &quot;13&quot; : GetThousands_10=&quot;Thirteen&quot;&#xD;&#xA; Case &quot;14&quot; : GetThousands_10=&quot;Forteen&quot;&#xD;&#xA; Case &quot;15&quot; : GetThousands_10=&quot;Fifteen&quot;&#xD;&#xA; Case &quot;16&quot; : GetThousands_10=&quot;Sixteen&quot;&#xD;&#xA; Case &quot;17&quot; : GetThousands_10=&quot;Seventeen&quot;&#xD;&#xA; Case &quot;18&quot; : GetThousands_10=&quot;Eighteen&quot;&#xD;&#xA; Case &quot;19&quot; : GetThousands_10=&quot;Nineteen&quot;&#xD;&#xA; Case Else : GetThousands_10=&quot;&quot;&#xD;&#xA; End Select&#xD;&#xA;&#xD;&#xA;Else If Len(Before_Amt)&gt;=5 And Left(right(Before_Amt,5),1)&lt;&gt; &quot;0&quot; And Left(right(Before_Amt,5),1)&lt;&gt; &quot;1&quot; Then&#xD;&#xA;&#xD;&#xA;Thousands = Left(right(Before_Amt,5),1)&#xD;&#xA;&#xD;&#xA;Select Case Thousands&#xD;&#xA; Case &quot;2&quot; : GetThousands_10=&quot;Twenty&quot;&#xD;&#xA; Case &quot;3&quot; : GetThousands_10=&quot;Thirty&quot;&#xD;&#xA; Case &quot;4&quot; : GetThousands_10=&quot;Fourty&quot;&#xD;&#xA; Case &quot;5&quot; : GetThousands_10=&quot;Fifty&quot;&#xD;&#xA; Case &quot;6&quot; : GetThousands_10=&quot;Sixty&quot;&#xD;&#xA; Case &quot;7&quot; : GetThousands_10=&quot;Seventy&quot;&#xD;&#xA; Case &quot;8&quot; : GetThousands_10=&quot;Eighty&quot;&#xD;&#xA; Case &quot;9&quot; : GetThousands_10=&quot;Ninety&quot;&#xD;&#xA; Case Else : GetThousands_10=&quot;&quot;&#xD;&#xA; End Select&#xD;&#xA;End If&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;If Len(Before_Amt)&gt;=6 And Left(right(Before_Amt,6),1)&lt;&gt; &quot;0&quot; Then&#xD;&#xA;&#xD;&#xA;Thousands = Left(right(Before_Amt,6),1)&#xD;&#xA;&#xD;&#xA;Select Case Thousands&#xD;&#xA; Case &quot;1&quot; : GetThousands_100=&quot;One&quot;&#xD;&#xA; Case &quot;2&quot; : GetThousands_100=&quot;Two&quot;&#xD;&#xA; Case &quot;3&quot; : GetThousands_100=&quot;Three&quot;&#xD;&#xA; Case &quot;4&quot; : GetThousands_100=&quot;Four&quot;&#xD;&#xA; Case &quot;5&quot; : GetThousands_100=&quot;Five&quot;&#xD;&#xA; Case &quot;6&quot; : GetThousands_100=&quot;Six&quot;&#xD;&#xA; Case &quot;7&quot; : GetThousands_100=&quot;Seven&quot;&#xD;&#xA; Case &quot;8&quot; : GetThousands_100=&quot;Eight&quot;&#xD;&#xA; Case &quot;9&quot; : GetThousands_100=&quot;Nine&quot; &#xD;&#xA; Case Else: GetThousands_100 = &quot;&quot;&#xD;&#xA; End Select&#xD;&#xA;End If&#xD;&#xA;&#xD;&#xA;If GetThousands_100&lt;&gt;&quot;&quot; Then&#xD;&#xA;&#xD;&#xA;GetThousands_100 = GetThousands_100 &amp; &quot; Hundred&quot;&#xD;&#xA;&#xD;&#xA;End If&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;If GetThousands_100=&quot;&quot; And GetThousands_10=&quot;&quot; And GetThousands_1=&quot;&quot; Then&#xD;&#xA;&#xD;&#xA;GetThousands = &quot;&quot;&#xD;&#xA;&#xD;&#xA;Else GetThousands = GetThousands_100 &amp;&quot; &quot; &amp; GetThousands_10 &amp; &quot; &quot; &amp; GetThousands_1 &amp; &quot; Thousand&quot;&#xD;&#xA;&#xD;&#xA;End If&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;''''''''''''''''''''''''''''''''''''''''''''''''''''''&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;'''''''''''''''''' MILLIONS ''''''''''''''''''''''''''&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;If Len(Before_Amt)=7 Then&#xD;&#xA;&#xD;&#xA;Millions = Left(right(Before_Amt,7),1)&#xD;&#xA;&#xD;&#xA;Select Case Millions&#xD;&#xA; Case &quot;1&quot; : GetMillions_1=&quot;One&quot;&#xD;&#xA; Case &quot;2&quot; : GetMillions_1=&quot;Two&quot;&#xD;&#xA; Case &quot;3&quot; : GetMillions_1=&quot;Three&quot;&#xD;&#xA; Case &quot;4&quot; : GetMillions_1=&quot;Four&quot;&#xD;&#xA; Case &quot;5&quot; : GetMillions_1=&quot;Five&quot;&#xD;&#xA; Case &quot;6&quot; : GetMillions_1=&quot;Six&quot;&#xD;&#xA; Case &quot;7&quot; : GetMillions_1=&quot;Seven&quot;&#xD;&#xA; Case &quot;8&quot; : GetMillions_1=&quot;Eight&quot;&#xD;&#xA; Case &quot;9&quot; : GetMillions_1=&quot;Nine&quot;&#xD;&#xA; Case Else: GetMillions_1 = &quot;&quot;&#xD;&#xA; End Select&#xD;&#xA;&#xD;&#xA;Else If Len(Before_Amt)&gt;=7 And Left(right(Before_Amt,8),1)&lt;&gt; &quot;1&quot; Then&#xD;&#xA;&#xD;&#xA;Millions = Left(right(Before_Amt,7),1)&#xD;&#xA;&#xD;&#xA;Select Case Millions&#xD;&#xA; Case &quot;1&quot; : GetMillions_1=&quot;One&quot;&#xD;&#xA; Case &quot;2&quot; : GetMillions_1=&quot;Two&quot;&#xD;&#xA; Case &quot;3&quot; : GetMillions_1=&quot;Three&quot;&#xD;&#xA; Case &quot;4&quot; : GetMillions_1=&quot;Four&quot;&#xD;&#xA; Case &quot;5&quot; : GetMillions_1=&quot;Five&quot;&#xD;&#xA; Case &quot;6&quot; : GetMillions_1=&quot;Six&quot;&#xD;&#xA; Case &quot;7&quot; : GetMillions_1=&quot;Seven&quot;&#xD;&#xA; Case &quot;8&quot; : GetMillions_1=&quot;Eight&quot;&#xD;&#xA; Case &quot;9&quot; : GetMillions_1=&quot;Nine&quot;&#xD;&#xA; Case Else: GetMillions_1 = &quot;&quot;&#xD;&#xA; End Select&#xD;&#xA;&#xD;&#xA;&#xD;&#xA; End If&#xD;&#xA;&#xD;&#xA;If Len(Before_Amt)&gt;=8 And Left(right(Before_Amt,8),1)&lt;&gt; &quot;0&quot; And Left(right(Before_Amt,8),1)= &quot;1&quot; Then&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Millions = Left(right(Before_Amt,8),2)&#xD;&#xA;&#xD;&#xA;Select Case Millions&#xD;&#xA; Case &quot;10&quot; : GetMillions_10=&quot;Ten&quot;&#xD;&#xA; Case &quot;11&quot; : GetMillions_10=&quot;Eleven&quot;&#xD;&#xA; Case &quot;12&quot; : GetMillions_10=&quot;Twelve&quot;&#xD;&#xA; Case &quot;13&quot; : GetMillions_10=&quot;Thirteen&quot;&#xD;&#xA; Case &quot;14&quot; : GetMillions_10=&quot;Forteen&quot;&#xD;&#xA; Case &quot;15&quot; : GetMillions_10=&quot;Fifteen&quot;&#xD;&#xA; Case &quot;16&quot; : GetMillions_10=&quot;Sixteen&quot;&#xD;&#xA; Case &quot;17&quot; : GetMillions_10=&quot;Seventeen&quot;&#xD;&#xA; Case &quot;18&quot; : GetMillions_10=&quot;Eighteen&quot;&#xD;&#xA; Case &quot;19&quot; : GetMillions_10=&quot;Nineteen&quot;&#xD;&#xA; Case Else : GetMillions_10=&quot;&quot;&#xD;&#xA; End Select&#xD;&#xA;&#xD;&#xA;Else If Len(Before_Amt)&gt;=8 And Left(right(Before_Amt,8),1)&lt;&gt; &quot;0&quot; And Left(right(Before_Amt,8),1)&lt;&gt; &quot;1&quot; Then&#xD;&#xA;&#xD;&#xA;Millions = Left(right(Before_Amt,8),1)&#xD;&#xA;&#xD;&#xA;Select Case Millions&#xD;&#xA; Case &quot;2&quot; : GetMillions_10=&quot;Twenty&quot;&#xD;&#xA; Case &quot;3&quot; : GetMillions_10=&quot;Thirty&quot;&#xD;&#xA; Case &quot;4&quot; : GetMillions_10=&quot;Fourty&quot;&#xD;&#xA; Case &quot;5&quot; : GetMillions_10=&quot;Fifty&quot;&#xD;&#xA; Case &quot;6&quot; : GetMillions_10=&quot;Sixty&quot;&#xD;&#xA; Case &quot;7&quot; : GetMillions_10=&quot;Seventy&quot;&#xD;&#xA; Case &quot;8&quot; : GetMillions_10=&quot;Eighty&quot;&#xD;&#xA; Case &quot;9&quot; : GetMillions_10=&quot;Ninety&quot;&#xD;&#xA; Case Else : GetMillions_10=&quot;&quot;&#xD;&#xA; End Select&#xD;&#xA;End If&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;If Len(Before_Amt)&gt;=9 And Left(right(Before_Amt,9),1)&lt;&gt; &quot;0&quot; Then&#xD;&#xA;&#xD;&#xA;Millions = Left(right(Before_Amt,9),1)&#xD;&#xA;&#xD;&#xA;Select Case Millions&#xD;&#xA; Case &quot;1&quot; : GetMillions_100=&quot;One&quot;&#xD;&#xA; Case &quot;2&quot; : GetMillions_100=&quot;Two&quot;&#xD;&#xA; Case &quot;3&quot; : GetMillions_100=&quot;Three&quot;&#xD;&#xA; Case &quot;4&quot; : GetMillions_100=&quot;Four&quot;&#xD;&#xA; Case &quot;5&quot; : GetMillions_100=&quot;Five&quot;&#xD;&#xA; Case &quot;6&quot; : GetMillions_100=&quot;Six&quot;&#xD;&#xA; Case &quot;7&quot; : GetMillions_100=&quot;Seven&quot;&#xD;&#xA; Case &quot;8&quot; : GetMillions_100=&quot;Eight&quot;&#xD;&#xA; Case &quot;9&quot; : GetMillions_100=&quot;Nine&quot; &#xD;&#xA; Case Else: GetMillions_100 = &quot;&quot;&#xD;&#xA; End Select&#xD;&#xA;End If&#xD;&#xA;&#xD;&#xA;If GetMillions_100&lt;&gt;&quot;&quot; Then&#xD;&#xA;&#xD;&#xA;GetMillions_100 = GetMillions_100 &amp; &quot; Hundred&quot;&#xD;&#xA;&#xD;&#xA;End If&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;If GetMillions_100=&quot;&quot; And GetMillions_10=&quot;&quot; And GetMillions_1=&quot;&quot; Then&#xD;&#xA;&#xD;&#xA;GetMillions = &quot;&quot;&#xD;&#xA;&#xD;&#xA;Else GetMillions = GetMillions_100 &amp;&quot; &quot; &amp; GetMillions_10 &amp; &quot; &quot; &amp; GetMillions_1 &amp; &quot; Million&quot;&#xD;&#xA;&#xD;&#xA;End If&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;''''''''''''''''''''''''''''''''''''''''''''''''''''''&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;'''''''''''''''''' BILLIONS ''''''''''''''''''''''''''&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;If Len(Before_Amt)=10 Then&#xD;&#xA;&#xD;&#xA;Billions = Left(right(Before_Amt,10),1)&#xD;&#xA;&#xD;&#xA;Select Case Billions&#xD;&#xA; Case &quot;1&quot; : GetBillions_1=&quot;One&quot;&#xD;&#xA; Case &quot;2&quot; : GetBillions_1=&quot;Two&quot;&#xD;&#xA; Case &quot;3&quot; : GetBillions_1=&quot;Three&quot;&#xD;&#xA; Case &quot;4&quot; : GetBillions_1=&quot;Four&quot;&#xD;&#xA; Case &quot;5&quot; : GetBillions_1=&quot;Five&quot;&#xD;&#xA; Case &quot;6&quot; : GetBillions_1=&quot;Six&quot;&#xD;&#xA; Case &quot;7&quot; : GetBillions_1=&quot;Seven&quot;&#xD;&#xA; Case &quot;8&quot; : GetBillions_1=&quot;Eight&quot;&#xD;&#xA; Case &quot;9&quot; : GetBillions_1=&quot;Nine&quot;&#xD;&#xA; Case Else: GetBillions_1 = &quot;&quot;&#xD;&#xA; End Select&#xD;&#xA;&#xD;&#xA;Else If Len(Before_Amt)&gt;=10 And Left(right(Before_Amt,11),1)&lt;&gt; &quot;1&quot; Then&#xD;&#xA;&#xD;&#xA;Billions = Left(right(Before_Amt,10),1)&#xD;&#xA;&#xD;&#xA;Select Case Billions&#xD;&#xA; Case &quot;1&quot; : GetBillions_1=&quot;One&quot;&#xD;&#xA; Case &quot;2&quot; : GetBillions_1=&quot;Two&quot;&#xD;&#xA; Case &quot;3&quot; : GetBillions_1=&quot;Three&quot;&#xD;&#xA; Case &quot;4&quot; : GetBillions_1=&quot;Four&quot;&#xD;&#xA; Case &quot;5&quot; : GetBillions_1=&quot;Five&quot;&#xD;&#xA; Case &quot;6&quot; : GetBillions_1=&quot;Six&quot;&#xD;&#xA; Case &quot;7&quot; : GetBillions_1=&quot;Seven&quot;&#xD;&#xA; Case &quot;8&quot; : GetBillions_1=&quot;Eight&quot;&#xD;&#xA; Case &quot;9&quot; : GetBillions_1=&quot;Nine&quot;&#xD;&#xA; Case Else: GetBillions_1 = &quot;&quot;&#xD;&#xA; End Select&#xD;&#xA; End If&#xD;&#xA;&#xD;&#xA;If Len(Before_Amt)&gt;=11 And Left(right(Before_Amt,11),1)&lt;&gt; &quot;0&quot; And Left(right(Before_Amt,11),1)= &quot;1&quot; Then&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Billions = Left(right(Before_Amt,11),2)&#xD;&#xA;&#xD;&#xA;Select Case Billions&#xD;&#xA; Case &quot;10&quot; : GetBillions_10=&quot;Ten&quot;&#xD;&#xA; Case &quot;11&quot; : GetBillions_10=&quot;Eleven&quot;&#xD;&#xA; Case &quot;12&quot; : GetBillions_10=&quot;Twelve&quot;&#xD;&#xA; Case &quot;13&quot; : GetBillions_10=&quot;Thirteen&quot;&#xD;&#xA; Case &quot;14&quot; : GetBillions_10=&quot;Forteen&quot;&#xD;&#xA; Case &quot;15&quot; : GetBillions_10=&quot;Fifteen&quot;&#xD;&#xA; Case &quot;16&quot; : GetBillions_10=&quot;Sixteen&quot;&#xD;&#xA; Case &quot;17&quot; : GetBillions_10=&quot;Seventeen&quot;&#xD;&#xA; Case &quot;18&quot; : GetBillions_10=&quot;Eighteen&quot;&#xD;&#xA; Case &quot;19&quot; : GetBillions_10=&quot;Nineteen&quot;&#xD;&#xA; Case Else : GetBillions_10=&quot;&quot;&#xD;&#xA; End Select&#xD;&#xA;&#xD;&#xA;Else If Len(Before_Amt)&gt;=11 And Left(right(Before_Amt,11),1)&lt;&gt; &quot;0&quot; And Left(right(Before_Amt,11),1)&lt;&gt; &quot;1&quot; Then&#xD;&#xA;&#xD;&#xA;Billions = Left(right(Before_Amt,11),1)&#xD;&#xA;&#xD;&#xA;Select Case Billions&#xD;&#xA; Case &quot;2&quot; : GetBillions_10=&quot;Twenty&quot;&#xD;&#xA; Case &quot;3&quot; : GetBillions_10=&quot;Thirty&quot;&#xD;&#xA; Case &quot;4&quot; : GetBillions_10=&quot;Fourty&quot;&#xD;&#xA; Case &quot;5&quot; : GetBillions_10=&quot;Fifty&quot;&#xD;&#xA; Case &quot;6&quot; : GetBillions_10=&quot;Sixty&quot;&#xD;&#xA; Case &quot;7&quot; : GetBillions_10=&quot;Seventy&quot;&#xD;&#xA; Case &quot;8&quot; : GetBillions_10=&quot;Eighty&quot;&#xD;&#xA; Case &quot;9&quot; : GetBillions_10=&quot;Ninety&quot;&#xD;&#xA; Case Else : GetBillions_10=&quot;&quot;&#xD;&#xA; End Select&#xD;&#xA;End If&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;If Len(Before_Amt)&gt;=12 And Left(right(Before_Amt,12),1)&lt;&gt; &quot;0&quot; Then&#xD;&#xA;&#xD;&#xA;Billions = Left(right(Before_Amt,12),1)&#xD;&#xA;&#xD;&#xA;Select Case Billions&#xD;&#xA; Case &quot;1&quot; : GetBillions_100=&quot;One&quot;&#xD;&#xA; Case &quot;2&quot; : GetBillions_100=&quot;Two&quot;&#xD;&#xA; Case &quot;3&quot; : GetBillions_100=&quot;Three&quot;&#xD;&#xA; Case &quot;4&quot; : GetBillions_100=&quot;Four&quot;&#xD;&#xA; Case &quot;5&quot; : GetBillions_100=&quot;Five&quot;&#xD;&#xA; Case &quot;6&quot; : GetBillions_100=&quot;Six&quot;&#xD;&#xA; Case &quot;7&quot; : GetBillions_100=&quot;Seven&quot;&#xD;&#xA; Case &quot;8&quot; : GetBillions_100=&quot;Eight&quot;&#xD;&#xA; Case &quot;9&quot; : GetBillions_100=&quot;Nine&quot; &#xD;&#xA; Case Else: GetBillions_100 = &quot;&quot;&#xD;&#xA; End Select&#xD;&#xA;End If&#xD;&#xA;&#xD;&#xA;If GetBillions_100&lt;&gt;&quot;&quot; Then&#xD;&#xA;&#xD;&#xA;GetBillions_100 = GetBillions_100 &amp; &quot; Hundred&quot;&#xD;&#xA;&#xD;&#xA;End If&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;If GetBillions_100=&quot;&quot; And GetBillions_10=&quot;&quot; And GetBillions_1=&quot;&quot; Then&#xD;&#xA;&#xD;&#xA;GetBillions = &quot;&quot;&#xD;&#xA;&#xD;&#xA;Else GetBillions = GetBillions_100 &amp;&quot; &quot; &amp; GetBillions_10 &amp; &quot; &quot; &amp; GetBillions_1 &amp; &quot; Billion&quot;&#xD;&#xA;&#xD;&#xA;End If&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;''''''''''''''''''''''''''''''''''''''''''''''''''''''&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;'''''''''''''''''' TRILLIONS '''''''''''''''''''''''''&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;If Len(Before_Amt)=13 Then&#xD;&#xA;&#xD;&#xA;Trillions = Left(right(Before_Amt,13),1)&#xD;&#xA;&#xD;&#xA;Select Case Trillions&#xD;&#xA; Case &quot;1&quot; : GetTrillions_1=&quot;One&quot;&#xD;&#xA; Case &quot;2&quot; : GetTrillions_1=&quot;Two&quot;&#xD;&#xA; Case &quot;3&quot; : GetTrillions_1=&quot;Three&quot;&#xD;&#xA; Case &quot;4&quot; : GetTrillions_1=&quot;Four&quot;&#xD;&#xA; Case &quot;5&quot; : GetTrillions_1=&quot;Five&quot;&#xD;&#xA; Case &quot;6&quot; : GetTrillions_1=&quot;Six&quot;&#xD;&#xA; Case &quot;7&quot; : GetTrillions_1=&quot;Seven&quot;&#xD;&#xA; Case &quot;8&quot; : GetTrillions_1=&quot;Eight&quot;&#xD;&#xA; Case &quot;9&quot; : GetTrillions_1=&quot;Nine&quot;&#xD;&#xA; Case Else: GetTrillions_1 = &quot;&quot;&#xD;&#xA; End Select&#xD;&#xA;&#xD;&#xA;Else If Len(Before_Amt)&gt;13 And Left(right(Before_Amt,14),1)&lt;&gt; &quot;1&quot; Then&#xD;&#xA;&#xD;&#xA;Trillions = Left(right(Before_Amt,13),1)&#xD;&#xA;&#xD;&#xA;Select Case Trillions&#xD;&#xA; Case &quot;1&quot; : GetTrillions_1=&quot;One&quot;&#xD;&#xA; Case &quot;2&quot; : GetTrillions_1=&quot;Two&quot;&#xD;&#xA; Case &quot;3&quot; : GetTrillions_1=&quot;Three&quot;&#xD;&#xA; Case &quot;4&quot; : GetTrillions_1=&quot;Four&quot;&#xD;&#xA; Case &quot;5&quot; : GetTrillions_1=&quot;Five&quot;&#xD;&#xA; Case &quot;6&quot; : GetTrillions_1=&quot;Six&quot;&#xD;&#xA; Case &quot;7&quot; : GetTrillions_1=&quot;Seven&quot;&#xD;&#xA; Case &quot;8&quot; : GetTrillions_1=&quot;Eight&quot;&#xD;&#xA; Case &quot;9&quot; : GetTrillions_1=&quot;Nine&quot;&#xD;&#xA; Case Else: GetTrillions_1 = &quot;&quot;&#xD;&#xA; End Select&#xD;&#xA; End If&#xD;&#xA;&#xD;&#xA;If Len(Before_Amt)&gt;=14 And Left(right(Before_Amt,14),1)&lt;&gt; &quot;0&quot; And Left(right(Before_Amt,14),1)= &quot;1&quot; Then&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Trillions = Left(right(Before_Amt,14),2)&#xD;&#xA;&#xD;&#xA;Select Case Trillions&#xD;&#xA; Case &quot;10&quot; : GetTrillions_10=&quot;Ten&quot;&#xD;&#xA; Case &quot;11&quot; : GetTrillions_10=&quot;Eleven&quot;&#xD;&#xA; Case &quot;12&quot; : GetTrillions_10=&quot;Twelve&quot;&#xD;&#xA; Case &quot;13&quot; : GetTrillions_10=&quot;Thirteen&quot;&#xD;&#xA; Case &quot;14&quot; : GetTrillions_10=&quot;Forteen&quot;&#xD;&#xA; Case &quot;15&quot; : GetTrillions_10=&quot;Fifteen&quot;&#xD;&#xA; Case &quot;16&quot; : GetTrillions_10=&quot;Sixteen&quot;&#xD;&#xA; Case &quot;17&quot; : GetTrillions_10=&quot;Seventeen&quot;&#xD;&#xA; Case &quot;18&quot; : GetTrillions_10=&quot;Eighteen&quot;&#xD;&#xA; Case &quot;19&quot; : GetTrillions_10=&quot;Nineteen&quot;&#xD;&#xA; Case Else : GetTrillions_10=&quot;&quot;&#xD;&#xA; End Select&#xD;&#xA;&#xD;&#xA;Else If Len(Before_Amt)&gt;=14 And Left(right(Before_Amt,14),1)&lt;&gt; &quot;0&quot; And Left(right(Before_Amt,14),1)&lt;&gt; &quot;1&quot; Then&#xD;&#xA;&#xD;&#xA;Trillions = Left(right(Before_Amt,14),1)&#xD;&#xA;&#xD;&#xA;Select Case Trillions&#xD;&#xA; Case &quot;2&quot; : GetTrillions_10=&quot;Twenty&quot;&#xD;&#xA; Case &quot;3&quot; : GetTrillions_10=&quot;Thirty&quot;&#xD;&#xA; Case &quot;4&quot; : GetTrillions_10=&quot;Fourty&quot;&#xD;&#xA; Case &quot;5&quot; : GetTrillions_10=&quot;Fifty&quot;&#xD;&#xA; Case &quot;6&quot; : GetTrillions_10=&quot;Sixty&quot;&#xD;&#xA; Case &quot;7&quot; : GetTrillions_10=&quot;Seventy&quot;&#xD;&#xA; Case &quot;8&quot; : GetTrillions_10=&quot;Eighty&quot;&#xD;&#xA; Case &quot;9&quot; : GetTrillions_10=&quot;Ninety&quot;&#xD;&#xA; Case Else : GetTrillions_10=&quot;&quot;&#xD;&#xA; End Select&#xD;&#xA;End If&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;If Len(Before_Amt)&gt;=15 And Left(right(Before_Amt,15),1)&lt;&gt; &quot;0&quot; Then&#xD;&#xA;&#xD;&#xA;Trillions = Left(right(Before_Amt,15),1)&#xD;&#xA;&#xD;&#xA;Select Case Trillions&#xD;&#xA; Case &quot;1&quot; : GetTrillions_100=&quot;One&quot;&#xD;&#xA; Case &quot;2&quot; : GetTrillions_100=&quot;Two&quot;&#xD;&#xA; Case &quot;3&quot; : GetTrillions_100=&quot;Three&quot;&#xD;&#xA; Case &quot;4&quot; : GetTrillions_100=&quot;Four&quot;&#xD;&#xA; Case &quot;5&quot; : GetTrillions_100=&quot;Five&quot;&#xD;&#xA; Case &quot;6&quot; : GetTrillions_100=&quot;Six&quot;&#xD;&#xA; Case &quot;7&quot; : GetTrillions_100=&quot;Seven&quot;&#xD;&#xA; Case &quot;8&quot; : GetTrillions_100=&quot;Eight&quot;&#xD;&#xA; Case &quot;9&quot; : GetTrillions_100=&quot;Nine&quot; &#xD;&#xA; Case Else: GetTrillions_100 = &quot;&quot;&#xD;&#xA; End Select&#xD;&#xA;End If&#xD;&#xA;&#xD;&#xA;If GetTrillions_100&lt;&gt;&quot;&quot; Then&#xD;&#xA;&#xD;&#xA;GetTrillions_100 = GetTrillions_100 &amp; &quot; Hundred&quot;&#xD;&#xA;&#xD;&#xA;End If&#xD;&#xA;&#xD;&#xA;If GetTrillions_100=&quot;&quot; And GetTrillions_10=&quot;&quot; And GetTrillions_1=&quot;&quot; Then&#xD;&#xA;&#xD;&#xA;GetTrillions = &quot;&quot;&#xD;&#xA;&#xD;&#xA;Else GetTrillions = GetTrillions_100 &amp;&quot; &quot; &amp; GetTrillions_10 &amp; &quot; &quot; &amp; GetTrillions_1 &amp; &quot; Trillion&quot;&#xD;&#xA;&#xD;&#xA;End If&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Amt_Before_Decimal = GetTrillions &amp; &quot; &quot; &amp;GetBillions &amp; &quot; &quot; &amp;GetMillions &amp; &quot; &quot; &amp; GetThousands &amp; &quot; &quot; &amp; GetHundreds &amp; &quot; &quot; &amp; GetTens &amp; &quot; &quot; &amp; GetDigit&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;'''''''''''''''''' BEFORE DECIMAL ENDS HERE '''''''''''''''''''''''''&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;'''''''''''''''''' DECIMALS '''''''''''''''''''''''''&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;If DecimalPlace &lt;&gt; 0 Then&#xD;&#xA;&#xD;&#xA;DecimalCount = Mid(MyNumber.ToString, InStr(MyNumber.ToString, &quot;.&quot;)+1, MyNumber.ToString.count - InStr(MyNumber.ToString, &quot;.&quot;))&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;If Len(DecimalCount)=2 And left(DecimalCount,1) &lt;&gt; &quot;1&quot; Then&#xD;&#xA;&#xD;&#xA;Select Case right(DecimalCount,1)&#xD;&#xA; Case &quot;1&quot; : DecimalCount_1 = &quot;One&quot;&#xD;&#xA; Case &quot;2&quot; : DecimalCount_1 = &quot;Two&quot;&#xD;&#xA; Case &quot;3&quot; : DecimalCount_1 = &quot;Three&quot;&#xD;&#xA; Case &quot;4&quot; : DecimalCount_1 = &quot;Four&quot;&#xD;&#xA; Case &quot;5&quot; : DecimalCount_1 = &quot;Five&quot;&#xD;&#xA; Case &quot;6&quot; : DecimalCount_1 = &quot;Six&quot;&#xD;&#xA; Case &quot;7&quot; : DecimalCount_1 = &quot;Seven&quot;&#xD;&#xA; Case &quot;8&quot; : DecimalCount_1 = &quot;Eight&quot;&#xD;&#xA; Case &quot;9&quot; : DecimalCount_1 = &quot;Nine&quot; &#xD;&#xA; Case Else: DecimalCount_1 = &quot;&quot;&#xD;&#xA; End Select&#xD;&#xA;End If&#xD;&#xA;&#xD;&#xA;If Len(DecimalCount)&lt;&gt;0 And left(DecimalCount,1) &lt;&gt; &quot;0&quot; And left(DecimalCount,1) = &quot;1&quot;&#xD;&#xA;&#xD;&#xA;Select Case DecimalCount&#xD;&#xA; Case &quot;1&quot;  : DecimalCount_10 = &quot;Ten&quot;&#xD;&#xA; Case &quot;10&quot; : DecimalCount_10 = &quot;Ten&quot;&#xD;&#xA; Case &quot;11&quot; : DecimalCount_10 = &quot;Eleven&quot;&#xD;&#xA; Case &quot;12&quot; : DecimalCount_10 = &quot;Twelve&quot;&#xD;&#xA; Case &quot;13&quot; : DecimalCount_10 = &quot;Thirteen&quot;&#xD;&#xA; Case &quot;14&quot; : DecimalCount_10 = &quot;Forteen&quot;&#xD;&#xA; Case &quot;15&quot; : DecimalCount_10 = &quot;Fifteen&quot;&#xD;&#xA; Case &quot;16&quot; : DecimalCount_10 = &quot;Sixteen&quot;&#xD;&#xA; Case &quot;17&quot; : DecimalCount_10 = &quot;Seventeen&quot;&#xD;&#xA; Case &quot;18&quot; : DecimalCount_10 = &quot;Eighteen&quot;&#xD;&#xA; Case &quot;19&quot; : DecimalCount_10 = &quot;Nineteen&quot;&#xD;&#xA; Case Else : DecimalCount_10 = &quot;&quot;&#xD;&#xA; End Select&#xD;&#xA;&#xD;&#xA;Else If Len(DecimalCount)&lt;&gt;0 And left(DecimalCount,1) &lt;&gt; &quot;0&quot; And left(DecimalCount,1) &lt;&gt; &quot;1&quot;&#xD;&#xA;&#xD;&#xA;Select Case left(DecimalCount,1)&#xD;&#xA; Case &quot;2&quot; : DecimalCount_10 = &quot;Twenty&quot;&#xD;&#xA; Case &quot;3&quot; : DecimalCount_10 = &quot;Thirty&quot;&#xD;&#xA; Case &quot;4&quot; : DecimalCount_10 = &quot;Fourty&quot;&#xD;&#xA; Case &quot;5&quot; : DecimalCount_10 = &quot;Fifty&quot;&#xD;&#xA; Case &quot;6&quot; : DecimalCount_10 = &quot;Sixty&quot;&#xD;&#xA; Case &quot;7&quot; : DecimalCount_10 = &quot;Seventy&quot;&#xD;&#xA; Case &quot;8&quot; : DecimalCount_10 = &quot;Eighty&quot;&#xD;&#xA; Case &quot;9&quot; : DecimalCount_10 = &quot;Ninety&quot;&#xD;&#xA; Case Else : DecimalCount_10 = &quot;&quot;&#xD;&#xA; End Select&#xD;&#xA; End If&#xD;&#xA;&#xD;&#xA;Amt_After_Decimal = &quot; &quot; &amp; DecimalCount_10 &amp; &quot; &quot; &amp; DecimalCount_1&#xD;&#xA;&#xD;&#xA;Else If DecimalPlace = 0 Then&#xD;&#xA;&#xD;&#xA;Amt_After_Decimal = &quot;&quot;&#xD;&#xA;&#xD;&#xA;End If&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;'''''''''''''''''' AFTER DECIMAL ENDS HERE '''''''''''''''''''''''''&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;'''''''''''''''''' COUNTRY TYPE AND CURRENCY '''''''''''''''''''''''''&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''&#xD;&#xA;Select UCase(Curr_Type)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;AFN&quot;                          'Country:  Afghanistan         Currency : Afghan afghani&#xD;&#xA;Country_currency = &quot;Afghani&quot;   &#xD;&#xA;Decimal_Singular = &quot;Pul&quot;&#xD;&#xA;Decimal_Plural = &quot;Pul&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;EUR&quot;                          'Country:  Akrotiri and Dhekelia (UK)         Currency : European euro&#xD;&#xA;Country_currency = &quot;Euro&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;EUR&quot;                          'Country:  Aland Islands (Finland)         Currency : European euro&#xD;&#xA;Country_currency = &quot;Euro&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;ALL&quot;                          'Country:  Albania         Currency : Albanian lek&#xD;&#xA;Country_currency = &quot;lek&quot;   &#xD;&#xA;Decimal_Singular = &quot;Qindarkë&quot;&#xD;&#xA;Decimal_Plural = &quot;Qindarka&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;DZD&quot;                          'Country:  Algeria         Currency : Algerian dinar&#xD;&#xA;Country_currency = &quot;Dinar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Santeem&quot;&#xD;&#xA;Decimal_Plural = &quot;Santeems&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;USD&quot;                          'Country:  American Samoa (USA)         Currency : United States dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;EUR&quot;                          'Country:  Andorra         Currency : European euro&#xD;&#xA;Country_currency = &quot;Euro&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;AOA&quot;                          'Country:  Angola         Currency : Angolan kwanza&#xD;&#xA;Country_currency = &quot;Kwanza&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cêntimo&quot;&#xD;&#xA;Decimal_Plural = &quot;Cêntimo&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;XCD&quot;                          'Country:  Anguilla (UK)         Currency : East Caribbean dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;XCD&quot;                          'Country:  Antigua and Barbuda         Currency : East Caribbean dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;ARS&quot;                          'Country:  Argentina         Currency : Argentine peso&#xD;&#xA;Country_currency = &quot;Peso&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centavo&quot;&#xD;&#xA;Decimal_Plural = &quot;Centavos&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;AMD&quot;                          'Country:  Armenia         Currency : Armenian dram&#xD;&#xA;Country_currency = &quot;Dram&quot;   &#xD;&#xA;Decimal_Singular = &quot;Luma&quot;&#xD;&#xA;Decimal_Plural = &quot;Luma&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;AWG&quot;                          'Country:  Aruba (Netherlands)         Currency : Aruban florin&#xD;&#xA;Country_currency = &quot;Florin&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;SHP&quot;                          'Country:  Ascension Island (UK)         Currency : Saint Helena pound&#xD;&#xA;Country_currency = &quot;Pound&quot;   &#xD;&#xA;Decimal_Singular = &quot;Penny&quot;&#xD;&#xA;Decimal_Plural = &quot;Pence&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;AUD&quot;                          'Country:  Australia         Currency : Australian dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;EUR&quot;                          'Country:  Austria         Currency : European euro&#xD;&#xA;Country_currency = &quot;Euro&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;AZN&quot;                          'Country:  Azerbaijan         Currency : Azerbaijan manat&#xD;&#xA;Country_currency = &quot;Manat&quot;   &#xD;&#xA;Decimal_Singular = &quot;Qəpik&quot;&#xD;&#xA;Decimal_Plural = &quot;Qəpik&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;BSD&quot;                          'Country:  Bahamas         Currency : Bahamian dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;BHD&quot;                          'Country:  Bahrain         Currency : Bahraini dinar&#xD;&#xA;Country_currency = &quot;Dinar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Fils&quot;&#xD;&#xA;Decimal_Plural = &quot;Fils&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;BDT&quot;                          'Country:  Bangladesh         Currency : Bangladeshi taka&#xD;&#xA;Country_currency = &quot;Taka&quot;   &#xD;&#xA;Decimal_Singular = &quot;Poisha&quot;&#xD;&#xA;Decimal_Plural = &quot;Poisha&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;BBD&quot;                          'Country:  Barbados         Currency : Barbadian dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;BYN&quot;                          'Country:  Belarus         Currency : Belarusian ruble&#xD;&#xA;Country_currency = &quot;Ruble&quot;   &#xD;&#xA;Decimal_Singular = &quot;Kapiejka&quot;&#xD;&#xA;Decimal_Plural = &quot;Kapiejka&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;EUR&quot;                          'Country:  Belgium         Currency : European euro&#xD;&#xA;Country_currency = &quot;Euro&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;BZD&quot;                          'Country:  Belize         Currency : Belize dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;XOF&quot;                          'Country:  Benin         Currency : West African CFA franc&#xD;&#xA;Country_currency = &quot;CFA Franc&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centime&quot;&#xD;&#xA;Decimal_Plural = &quot;Centime&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;BMD&quot;                          'Country:  Bermuda (UK)         Currency : Bermudian dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;BTN&quot;                          'Country:  Bhutan         Currency : Bhutanese ngultrum&#xD;&#xA;Country_currency = &quot;Ngultrum&quot;   &#xD;&#xA;Decimal_Singular = &quot;Chetrum&quot;&#xD;&#xA;Decimal_Plural = &quot;Chetrums&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;BOB&quot;                          'Country:  Bolivia         Currency : Bolivian boliviano&#xD;&#xA;Country_currency = &quot;Boliviano&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centavo&quot;&#xD;&#xA;Decimal_Plural = &quot;Centavos&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;USD&quot;                          'Country:  Bonaire (Netherlands)         Currency : United States dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;BAM&quot;                          'Country:  Bosnia and Herzegovina         Currency : Bosnia and Herzegovina convertible mark&#xD;&#xA;Country_currency = &quot;Mark&quot;   &#xD;&#xA;Decimal_Singular = &quot;Fening&quot;&#xD;&#xA;Decimal_Plural = &quot;Fenings&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;BWP&quot;                          'Country:  Botswana         Currency : Botswana pula&#xD;&#xA;Country_currency = &quot;Pula&quot;   &#xD;&#xA;Decimal_Singular = &quot;Thebe&quot;&#xD;&#xA;Decimal_Plural = &quot;Thebe&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;BRL&quot;                          'Country:  Brazil         Currency : Brazilian real&#xD;&#xA;Country_currency = &quot;Real&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centavo&quot;&#xD;&#xA;Decimal_Plural = &quot;Centavos&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;USD&quot;                          'Country:  British Indian Ocean Territory (UK)         Currency : United States dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;USD&quot;                          'Country:  British Virgin Islands (UK)         Currency : United States dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;BND&quot;                          'Country:  Brunei         Currency : Brunei dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;BGN&quot;                          'Country:  Bulgaria         Currency : Bulgarian lev&#xD;&#xA;Country_currency = &quot;Lev&quot;   &#xD;&#xA;Decimal_Singular = &quot;Stotinka&quot;&#xD;&#xA;Decimal_Plural = &quot;Stotinki&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;XOF&quot;                          'Country:  Burkina Faso         Currency : West African CFA franc&#xD;&#xA;Country_currency = &quot;CFA Franc&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centime&quot;&#xD;&#xA;Decimal_Plural = &quot;Centime&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;BIF&quot;                          'Country:  Burundi         Currency : Burundi franc&#xD;&#xA;Country_currency = &quot;Franc&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centime&quot;&#xD;&#xA;Decimal_Plural = &quot;Centime&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;CVE&quot;                          'Country:  Cabo Verde         Currency : Cape Verdean escudo&#xD;&#xA;Country_currency = &quot;Escudo&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centavo&quot;&#xD;&#xA;Decimal_Plural = &quot;Centavo&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;KHR&quot;                          'Country:  Cambodia         Currency : Cambodian riel&#xD;&#xA;Country_currency = &quot;Riel&quot;   &#xD;&#xA;Decimal_Singular = &quot;Sen&quot;&#xD;&#xA;Decimal_Plural = &quot;Sen&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;XAF&quot;                          'Country:  Cameroon         Currency : Central African CFA franc&#xD;&#xA;Country_currency = &quot;CFA Franc BEAC&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centime&quot;&#xD;&#xA;Decimal_Plural = &quot;Centime&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;CAD&quot;                          'Country:  Canada         Currency : Canadian dollar&#xD;&#xA;Country_currency = &quot;Canadian Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;USD&quot;                          'Country:  Caribbean Netherlands (Netherlands)         Currency : United States dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;KYD&quot;                          'Country:  Cayman Islands (UK)         Currency : Cayman Islands dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;XAF&quot;                          'Country:  Central African Republic         Currency : Central African CFA franc&#xD;&#xA;Country_currency = &quot;CFA Franc&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centime&quot;&#xD;&#xA;Decimal_Plural = &quot;Centime&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;XAF&quot;                          'Country:  Chad         Currency : Central African CFA franc&#xD;&#xA;Country_currency = &quot;CFA Franc&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centime&quot;&#xD;&#xA;Decimal_Plural = &quot;Centime&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;NZD&quot;                          'Country:  Chatham Islands (New Zealand)         Currency : New Zealand dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;CLP&quot;                          'Country:  Chile         Currency : Chilean peso&#xD;&#xA;Country_currency = &quot;Peso&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centavo&quot;&#xD;&#xA;Decimal_Plural = &quot;Centavo&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;CNY&quot;                          'Country:  China         Currency : Chinese Yuan Renminbi&#xD;&#xA;Country_currency = &quot;Yuan&quot;   &#xD;&#xA;Decimal_Singular = &quot;Fen&quot;&#xD;&#xA;Decimal_Plural = &quot;Fen&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;AUD&quot;                          'Country:  Christmas Island (Australia)         Currency : Australian dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;AUD&quot;                          'Country:  Cocos (Keeling) Islands (Australia)         Currency : Australian dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;COP&quot;                          'Country:  Colombia         Currency : Colombian peso&#xD;&#xA;Country_currency = &quot;Peso&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centavo&quot;&#xD;&#xA;Decimal_Plural = &quot;Centavos&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;KMF&quot;                          'Country:  Comoros         Currency : Comorian franc&#xD;&#xA;Country_currency = &quot;Franc&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centime&quot;&#xD;&#xA;Decimal_Plural = &quot;Centimes&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;CDF&quot;                          'Country:  Congo, Democratic Republic of the         Currency : Congolese franc&#xD;&#xA;Country_currency = &quot;Franc&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centime&quot;&#xD;&#xA;Decimal_Plural = &quot;Centimes&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;XAF&quot;                          'Country:  Congo, Republic of the         Currency : Central African CFA franc&#xD;&#xA;Country_currency = &quot;CFA Franc&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centime&quot;&#xD;&#xA;Decimal_Plural = &quot;Centime&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;none&quot;                          'Country:  Cook Islands (New Zealand)         Currency : Cook Islands dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Tene&quot;&#xD;&#xA;Decimal_Plural = &quot;Tene&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;CRC&quot;                          'Country:  Costa Rica         Currency : Costa Rican colon&#xD;&#xA;Country_currency = &quot;Colon&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centimo&quot;&#xD;&#xA;Decimal_Plural = &quot;Centimos&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;XOF&quot;                          'Country:  Cote d'Ivoire         Currency : West African CFA franc&#xD;&#xA;Country_currency = &quot;CFA Franc&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centime&quot;&#xD;&#xA;Decimal_Plural = &quot;Centime&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;HRK&quot;                          'Country:  Croatia         Currency : Croatian kuna&#xD;&#xA;Country_currency = &quot;Kuna&quot;   &#xD;&#xA;Decimal_Singular = &quot;Lipa&quot;&#xD;&#xA;Decimal_Plural = &quot;Lipas&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;CUP&quot;                          'Country:  Cuba         Currency : Cuban peso&#xD;&#xA;Country_currency = &quot;Cuban Peso&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centavo&quot;&#xD;&#xA;Decimal_Plural = &quot;Centavos&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;ANG&quot;                          'Country:  Curacao (Netherlands)         Currency : Netherlands Antillean guilder&#xD;&#xA;Country_currency = &quot;Guilder&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;EUR&quot;                          'Country:  Cyprus         Currency : European euro&#xD;&#xA;Country_currency = &quot;Euro&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;CZK&quot;                          'Country:  Czech Republic         Currency : Czech koruna&#xD;&#xA;Country_currency = &quot;Krona&quot;   &#xD;&#xA;Decimal_Singular = &quot;Haler&quot;&#xD;&#xA;Decimal_Plural = &quot;Halers&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;DKK&quot;                          'Country:  Denmark         Currency : Danish krone&#xD;&#xA;Country_currency = &quot;Krone&quot;   &#xD;&#xA;Decimal_Singular = &quot;Ore&quot;&#xD;&#xA;Decimal_Plural = &quot;Ore&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;DJF&quot;                          'Country:  Djibouti         Currency : Djiboutian franc&#xD;&#xA;Country_currency = &quot;Franc&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centime&quot;&#xD;&#xA;Decimal_Plural = &quot;Centimes&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;XCD&quot;                          'Country:  Dominica         Currency : East Caribbean dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;DOP&quot;                          'Country:  Dominican Republic         Currency : Dominican peso&#xD;&#xA;Country_currency = &quot;Peso&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centavo&quot;&#xD;&#xA;Decimal_Plural = &quot;Centavos&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;USD&quot;                          'Country:  Ecuador         Currency : United States dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;EGP&quot;                          'Country:  Egypt         Currency : Egyptian pound&#xD;&#xA;Country_currency = &quot;Pound&quot;   &#xD;&#xA;Decimal_Singular = &quot;Piastre&quot;&#xD;&#xA;Decimal_Plural = &quot;Piastres&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;USD&quot;                          'Country:  El Salvador         Currency : United States dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;XAF&quot;                          'Country:  Equatorial Guinea         Currency : Central African CFA franc&#xD;&#xA;Country_currency = &quot;CFA Franc&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centime&quot;&#xD;&#xA;Decimal_Plural = &quot;Centimes&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;ERN&quot;                          'Country:  Eritrea         Currency : Eritrean nakfa&#xD;&#xA;Country_currency = &quot;Nakfa&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;EUR&quot;                          'Country:  Estonia         Currency : European euro&#xD;&#xA;Country_currency = &quot;Euro&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;SZL&quot;                          'Country:  Eswatini (formerly Swaziland)         Currency : Swazi lilangeni&#xD;&#xA;Country_currency = &quot;Lilangeni&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;ETB&quot;                          'Country:  Ethiopia         Currency : Ethiopian birr&#xD;&#xA;Country_currency = &quot;Birr&quot;   &#xD;&#xA;Decimal_Singular = &quot;Santim&quot;&#xD;&#xA;Decimal_Plural = &quot;Santims&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;FKP&quot;                          'Country:  Falkland Islands (UK)         Currency : Falkland Islands pound&#xD;&#xA;Country_currency = &quot;Pound&quot;   &#xD;&#xA;Decimal_Singular = &quot;Penny&quot;&#xD;&#xA;Decimal_Plural = &quot;Pence&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;none&quot;                          'Country:  Faroe Islands (Denmark)         Currency : Faroese krona&#xD;&#xA;Country_currency = &quot;Krona&quot;   &#xD;&#xA;Decimal_Singular = &quot;Oyra&quot;&#xD;&#xA;Decimal_Plural = &quot;Oyru&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;FJD&quot;                          'Country:  Fiji         Currency : Fijian dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;EUR&quot;                          'Country:  Finland         Currency : European euro&#xD;&#xA;Country_currency = &quot;Euro&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;EUR&quot;                          'Country:  France         Currency : European euro&#xD;&#xA;Country_currency = &quot;Euro&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;EUR&quot;                          'Country:  French Guiana (France)         Currency : European euro&#xD;&#xA;Country_currency = &quot;Euro&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;XPF&quot;                          'Country:  French Polynesia (France)         Currency : CFP franc&#xD;&#xA;Country_currency = &quot;Franc&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centime&quot;&#xD;&#xA;Decimal_Plural = &quot;Centimes&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;XAF&quot;                          'Country:  Gabon         Currency : Central African CFA franc&#xD;&#xA;Country_currency = &quot;CFA Franc&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centime&quot;&#xD;&#xA;Decimal_Plural = &quot;Centimes&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;GMD&quot;                          'Country:  Gambia         Currency : Gambian dalasi&#xD;&#xA;Country_currency = &quot;Dalasi&quot;   &#xD;&#xA;Decimal_Singular = &quot;Butut&quot;&#xD;&#xA;Decimal_Plural = &quot;Bututs&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;GEL&quot;                          'Country:  Georgia         Currency : Georgian lari&#xD;&#xA;Country_currency = &quot;Lari&quot;   &#xD;&#xA;Decimal_Singular = &quot;Tetri&quot;&#xD;&#xA;Decimal_Plural = &quot;Tetri&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;EUR&quot;                          'Country:  Germany         Currency : European euro&#xD;&#xA;Country_currency = &quot;Euro&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;GHS&quot;                          'Country:  Ghana         Currency : Ghanaian cedi&#xD;&#xA;Country_currency = &quot;Cedi&quot;   &#xD;&#xA;Decimal_Singular = &quot;Pesewa&quot;&#xD;&#xA;Decimal_Plural = &quot;Pesewas&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;GIP&quot;                          'Country:  Gibraltar (UK)         Currency : Gibraltar pound&#xD;&#xA;Country_currency = &quot;Pound&quot;   &#xD;&#xA;Decimal_Singular = &quot;Penny&quot;&#xD;&#xA;Decimal_Plural = &quot;Pence&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;EUR&quot;                          'Country:  Greece         Currency : European euro&#xD;&#xA;Country_currency = &quot;Euro&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;DKK&quot;                          'Country:  Greenland (Denmark)         Currency : Danish krone&#xD;&#xA;Country_currency = &quot;Krone&quot;   &#xD;&#xA;Decimal_Singular = &quot;Ore&quot;&#xD;&#xA;Decimal_Plural = &quot;Ore&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;XCD&quot;                          'Country:  Grenada         Currency : East Caribbean dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;EUR&quot;                          'Country:  Guadeloupe (France)         Currency : European euro&#xD;&#xA;Country_currency = &quot;Euro&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;USD&quot;                          'Country:  Guam (USA)         Currency : United States dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;GTQ&quot;                          'Country:  Guatemala         Currency : Guatemalan quetzal&#xD;&#xA;Country_currency = &quot;Quetzal&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centavo&quot;&#xD;&#xA;Decimal_Plural = &quot;Centavo&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;GGP&quot;                          'Country:  Guernsey (UK)         Currency : Guernsey Pound&#xD;&#xA;Country_currency = &quot;Pound&quot;   &#xD;&#xA;Decimal_Singular = &quot;Penny&quot;&#xD;&#xA;Decimal_Plural = &quot;Pence&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;GNF&quot;                          'Country:  Guinea         Currency : Guinean franc&#xD;&#xA;Country_currency = &quot;Franc&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centime&quot;&#xD;&#xA;Decimal_Plural = &quot;Centime&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;XOF&quot;                          'Country:  Guinea-Bissau         Currency : West African CFA franc&#xD;&#xA;Country_currency = &quot;CFA Franc&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centime&quot;&#xD;&#xA;Decimal_Plural = &quot;Centime&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;GYD&quot;                          'Country:  Guyana         Currency : Guyanese dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;HTG&quot;                          'Country:  Haiti         Currency : Haitian gourde&#xD;&#xA;Country_currency = &quot;Gourde&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centime&quot;&#xD;&#xA;Decimal_Plural = &quot;Centime&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;HNL&quot;                          'Country:  Honduras         Currency : Honduran lempira&#xD;&#xA;Country_currency = &quot;Lempira&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centavo&quot;&#xD;&#xA;Decimal_Plural = &quot;Centavo&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;HKD&quot;                          'Country:  Hong Kong (China)         Currency : Hong Kong dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;HUF&quot;                          'Country:  Hungary         Currency : Hungarian forint&#xD;&#xA;Country_currency = &quot;Forint&quot;   &#xD;&#xA;Decimal_Singular = &quot;Filler&quot;&#xD;&#xA;Decimal_Plural = &quot;Filler&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;ISK&quot;                          'Country:  Iceland         Currency : Icelandic krona&#xD;&#xA;Country_currency = &quot;Krona&quot;   &#xD;&#xA;Decimal_Singular = &quot;Eyrir&quot;&#xD;&#xA;Decimal_Plural = &quot;Aurar&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;INR&quot;                          'Country:  India         Currency : Indian rupee&#xD;&#xA;Country_currency = &quot;Rupee&quot;   &#xD;&#xA;Decimal_Singular = &quot;Paise&quot;&#xD;&#xA;Decimal_Plural = &quot;Paise&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;IDR&quot;                          'Country:  Indonesia         Currency : Indonesian rupiah&#xD;&#xA;Country_currency = &quot;Rupiah&quot;   &#xD;&#xA;Decimal_Singular = &quot;Sen&quot;&#xD;&#xA;Decimal_Plural = &quot;Sen&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;IRR&quot;                          'Country:  Iran         Currency : Iranian rial&#xD;&#xA;Country_currency = &quot;Rial&quot;   &#xD;&#xA;Decimal_Singular = &quot;Dinar&quot;&#xD;&#xA;Decimal_Plural = &quot;Dinars&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;IQD&quot;                          'Country:  Iraq         Currency : Iraqi dinar&#xD;&#xA;Country_currency = &quot;Dinar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Fils&quot;&#xD;&#xA;Decimal_Plural = &quot;Fils&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;EUR&quot;                          'Country:  Ireland         Currency : European euro&#xD;&#xA;Country_currency = &quot;Euro&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;IMP&quot;                          'Country:  Isle of Man (UK)         Currency : Manx pound&#xD;&#xA;Country_currency = &quot;Pound&quot;   &#xD;&#xA;Decimal_Singular = &quot;Penny&quot;&#xD;&#xA;Decimal_Plural = &quot;Pence&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;ILS&quot;                          'Country:  Israel         Currency : Israeli new shekel&#xD;&#xA;Country_currency = &quot;Scheckel&quot;   &#xD;&#xA;Decimal_Singular = &quot;Agora&quot;&#xD;&#xA;Decimal_Plural = &quot;Agoras&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;EUR&quot;                          'Country:  Italy         Currency : European euro&#xD;&#xA;Country_currency = &quot;Euro&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;JMD&quot;                          'Country:  Jamaica         Currency : Jamaican dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;JPY&quot;                          'Country:  Japan         Currency : Japanese yen&#xD;&#xA;Country_currency = &quot;Yen&quot;   &#xD;&#xA;Decimal_Singular = &quot;Sen&quot;&#xD;&#xA;Decimal_Plural = &quot;Sen&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;JEP&quot;                          'Country:  Jersey (UK)         Currency : Jersey pound&#xD;&#xA;Country_currency = &quot;Pound&quot;   &#xD;&#xA;Decimal_Singular = &quot;Penny&quot;&#xD;&#xA;Decimal_Plural = &quot;Pence&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;JOD&quot;                          'Country:  Jordan         Currency : Jordanian dinar&#xD;&#xA;Country_currency = &quot;Dinar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Piastre&quot;&#xD;&#xA;Decimal_Plural = &quot;Piastre&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;KZT&quot;                          'Country:  Kazakhstan         Currency : Kazakhstani tenge&#xD;&#xA;Country_currency = &quot;Tenge&quot;   &#xD;&#xA;Decimal_Singular = &quot;Tiin&quot;&#xD;&#xA;Decimal_Plural = &quot;Tiin&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;KES&quot;                          'Country:  Kenya         Currency : Kenyan shilling&#xD;&#xA;Country_currency = &quot;Shilling&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;AUD&quot;                          'Country:  Kiribati         Currency : Australian dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;EUR&quot;                          'Country:  Kosovo         Currency : European euro&#xD;&#xA;Country_currency = &quot;Euro&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;KWD&quot;                          'Country:  Kuwait         Currency : Kuwaiti dinar&#xD;&#xA;Country_currency = &quot;Dinar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Fils&quot;&#xD;&#xA;Decimal_Plural = &quot;Fils&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;KGS&quot;                          'Country:  Kyrgyzstan         Currency : Kyrgyzstani som&#xD;&#xA;Country_currency = &quot;Som&quot;   &#xD;&#xA;Decimal_Singular = &quot;Tyiyn&quot;&#xD;&#xA;Decimal_Plural = &quot;Tyiyns&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;LAK&quot;                          'Country:  Laos         Currency : Lao kip&#xD;&#xA;Country_currency = &quot;Kip&quot;   &#xD;&#xA;Decimal_Singular = &quot;Att&quot;&#xD;&#xA;Decimal_Plural = &quot;Att&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;EUR&quot;                          'Country:  Latvia         Currency : European euro&#xD;&#xA;Country_currency = &quot;Euro&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;LBP&quot;                          'Country:  Lebanon         Currency : Lebanese pound&#xD;&#xA;Country_currency = &quot;Pound&quot;   &#xD;&#xA;Decimal_Singular = &quot;Piastre&quot;&#xD;&#xA;Decimal_Plural = &quot;Piastre&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;LSL&quot;                          'Country:  Lesotho         Currency : Lesotho loti&#xD;&#xA;Country_currency = &quot;Loti&quot;   &#xD;&#xA;Decimal_Singular = &quot;Sente&quot;&#xD;&#xA;Decimal_Plural = &quot;Sente&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;LRD&quot;                          'Country:  Liberia         Currency : Liberian dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;LYD&quot;                          'Country:  Libya         Currency : Libyan dinar&#xD;&#xA;Country_currency = &quot;Dinar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Dirham&quot;&#xD;&#xA;Decimal_Plural = &quot;Dirhams&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;CHF&quot;                          'Country:  Liechtenstein         Currency : Swiss franc&#xD;&#xA;Country_currency = &quot;Franc&quot;   &#xD;&#xA;Decimal_Singular = &quot;Rappen&quot;&#xD;&#xA;Decimal_Plural = &quot;Rappen&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;EUR&quot;                          'Country:  Lithuania         Currency : European euro&#xD;&#xA;Country_currency = &quot;Euro&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;EUR&quot;                          'Country:  Luxembourg         Currency : European euro&#xD;&#xA;Country_currency = &quot;Euro&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;MOP&quot;                          'Country:  Macau (China)         Currency : Macanese pataca&#xD;&#xA;Country_currency = &quot;Pataca&quot;   &#xD;&#xA;Decimal_Singular = &quot;Avo&quot;&#xD;&#xA;Decimal_Plural = &quot;Avo&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;MKD&quot;                          'Country:  Macedonia (FYROM)         Currency : Macedonian denar&#xD;&#xA;Country_currency = &quot;Denar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Deni&quot;&#xD;&#xA;Decimal_Plural = &quot;Denari&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;MGA&quot;                          'Country:  Madagascar         Currency : Malagasy ariary&#xD;&#xA;Country_currency = &quot;Ariary&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centimes&quot;&#xD;&#xA;Decimal_Plural = &quot;Centimes&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;MWK&quot;                          'Country:  Malawi         Currency : Malawian kwacha&#xD;&#xA;Country_currency = &quot;Kwacha&quot;   &#xD;&#xA;Decimal_Singular = &quot;Tambala&quot;&#xD;&#xA;Decimal_Plural = &quot;Tambala&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;MYR&quot;                          'Country:  Malaysia         Currency : Malaysian ringgit&#xD;&#xA;Country_currency = &quot;Ringgit&quot;   &#xD;&#xA;Decimal_Singular = &quot;Sen&quot;&#xD;&#xA;Decimal_Plural = &quot;Sen&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;MVR&quot;                          'Country:  Maldives         Currency : Maldivian rufiyaa&#xD;&#xA;Country_currency = &quot;Rufiyaa&quot;   &#xD;&#xA;Decimal_Singular = &quot;Laari&quot;&#xD;&#xA;Decimal_Plural = &quot;Laari&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;XOF&quot;                          'Country:  Mali         Currency : West African CFA franc&#xD;&#xA;Country_currency = &quot;CFA Franc&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centime&quot;&#xD;&#xA;Decimal_Plural = &quot;Centime&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;EUR&quot;                          'Country:  Malta         Currency : European euro&#xD;&#xA;Country_currency = &quot;Euro&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;USD&quot;                          'Country:  Marshall Islands         Currency : United States dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;EUR&quot;                          'Country:  Martinique (France)         Currency : European euro&#xD;&#xA;Country_currency = &quot;Euro&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;MRU&quot;                          'Country:  Mauritania         Currency : Mauritanian ouguiya&#xD;&#xA;Country_currency = &quot;Ouguiya&quot;   &#xD;&#xA;Decimal_Singular = &quot;&quot;&#xD;&#xA;Decimal_Plural = &quot;&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;MUR&quot;                          'Country:  Mauritius         Currency : Mauritian rupee&#xD;&#xA;Country_currency = &quot;Rupee&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;EUR&quot;                          'Country:  Mayotte (France)         Currency : European euro&#xD;&#xA;Country_currency = &quot;Euro&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;MXN&quot;                          'Country:  Mexico         Currency : Mexican peso&#xD;&#xA;Country_currency = &quot;Peso&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centavo&quot;&#xD;&#xA;Decimal_Plural = &quot;Centavo&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;USD&quot;                          'Country:  Micronesia         Currency : United States dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;MDL&quot;                          'Country:  Moldova         Currency : Moldovan leu&#xD;&#xA;Country_currency = &quot;Leu&quot;   &#xD;&#xA;Decimal_Singular = &quot;Ban&quot;&#xD;&#xA;Decimal_Plural = &quot;Bani&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;EUR&quot;                          'Country:  Monaco         Currency : European euro&#xD;&#xA;Country_currency = &quot;Euro&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;MNT&quot;                          'Country:  Mongolia         Currency : Mongolian tugrik&#xD;&#xA;Country_currency = &quot;Tugrik&quot;   &#xD;&#xA;Decimal_Singular = &quot;Mongo&quot;&#xD;&#xA;Decimal_Plural = &quot;Mongo&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;EUR&quot;                          'Country:  Montenegro         Currency : European euro&#xD;&#xA;Country_currency = &quot;Euro&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;XCD&quot;                          'Country:  Montserrat (UK)         Currency : East Caribbean dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;MAD&quot;                          'Country:  Morocco         Currency : Moroccan dirham&#xD;&#xA;Country_currency = &quot;Dirham&quot;   &#xD;&#xA;Decimal_Singular = &quot;Santim&quot;&#xD;&#xA;Decimal_Plural = &quot;Santim&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;MZN&quot;                          'Country:  Mozambique         Currency : Mozambican metical&#xD;&#xA;Country_currency = &quot;Metical&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centavo&quot;&#xD;&#xA;Decimal_Plural = &quot;Centavos&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;MMK&quot;                          'Country:  Myanmar (formerly Burma)         Currency : Myanmar kyat&#xD;&#xA;Country_currency = &quot;Kyat&quot;   &#xD;&#xA;Decimal_Singular = &quot;Pya&quot;&#xD;&#xA;Decimal_Plural = &quot;Pya&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;NAD&quot;                          'Country:  Namibia         Currency : Namibian dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;AUD&quot;                          'Country:  Nauru         Currency : Australian dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;NPR&quot;                          'Country:  Nepal         Currency : Nepalese rupee&#xD;&#xA;Country_currency = &quot;Rupee&quot;   &#xD;&#xA;Decimal_Singular = &quot;Paise&quot;&#xD;&#xA;Decimal_Plural = &quot;Paise&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;EUR&quot;                          'Country:  Netherlands         Currency : European euro&#xD;&#xA;Country_currency = &quot;Euro&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;XPF&quot;                          'Country:  New Caledonia (France)         Currency : CFP franc&#xD;&#xA;Country_currency = &quot;Franc&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centime&quot;&#xD;&#xA;Decimal_Plural = &quot;Centime&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;NZD&quot;                          'Country:  New Zealand         Currency : New Zealand dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;NIO&quot;                          'Country:  Nicaragua         Currency : Nicaraguan cordoba&#xD;&#xA;Country_currency = &quot;Oro&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centavo&quot;&#xD;&#xA;Decimal_Plural = &quot;Centavo&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;XOF&quot;                          'Country:  Niger         Currency : West African CFA franc&#xD;&#xA;Country_currency = &quot;CFA Franc&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centime&quot;&#xD;&#xA;Decimal_Plural = &quot;Centime&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;NGN&quot;                          'Country:  Nigeria         Currency : Nigerian naira&#xD;&#xA;Country_currency = &quot;Naira&quot;   &#xD;&#xA;Decimal_Singular = &quot;Kobo&quot;&#xD;&#xA;Decimal_Plural = &quot;Kobo&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;NZD&quot;                          'Country:  Niue (New Zealand)         Currency : New Zealand dollar&#xD;&#xA;Country_currency = &quot;N.Zeal.Dollars&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Centime&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;AUD&quot;                          'Country:  Norfolk Island (Australia)         Currency : Australian dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;USD&quot;                          'Country:  Northern Mariana Islands (USA)         Currency : United States dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;KPW&quot;                          'Country:  North Korea         Currency : North Korean won&#xD;&#xA;Country_currency = &quot;Won&quot;   &#xD;&#xA;Decimal_Singular = &quot;Chon&quot;&#xD;&#xA;Decimal_Plural = &quot;Chon&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;NOK&quot;                          'Country:  Norway         Currency : Norwegian krone&#xD;&#xA;Country_currency = &quot;Krone&quot;   &#xD;&#xA;Decimal_Singular = &quot;Ore&quot;&#xD;&#xA;Decimal_Plural = &quot;Øre&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;OMR&quot;                          'Country:  Oman         Currency : Omani rial&#xD;&#xA;Country_currency = &quot;Omani Rial&quot;   &#xD;&#xA;Decimal_Singular = &quot;Baisa&quot;&#xD;&#xA;Decimal_Plural = &quot;Baisa&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;PKR&quot;                          'Country:  Pakistan         Currency : Pakistani rupee&#xD;&#xA;Country_currency = &quot;Rupee&quot;   &#xD;&#xA;Decimal_Singular = &quot;Paise&quot;&#xD;&#xA;Decimal_Plural = &quot;Paise&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;USD&quot;                          'Country:  Palau         Currency : United States dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;ILS&quot;                          'Country:  Palestine         Currency : Israeli new shekel&#xD;&#xA;Country_currency = &quot;Scheckel&quot;   &#xD;&#xA;Decimal_Singular = &quot;Agora&quot;&#xD;&#xA;Decimal_Plural = &quot;Agoras&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;USD&quot;                          'Country:  Panama         Currency : United States dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;PGK&quot;                          'Country:  Papua New Guinea         Currency : Papua New Guinean kina&#xD;&#xA;Country_currency = &quot;Kina&quot;   &#xD;&#xA;Decimal_Singular = &quot;Toea&quot;&#xD;&#xA;Decimal_Plural = &quot;Toea&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;PYG&quot;                          'Country:  Paraguay         Currency : Paraguayan guarani&#xD;&#xA;Country_currency = &quot;Guarani&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centimo&quot;&#xD;&#xA;Decimal_Plural = &quot;Centimo&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;PEN&quot;                          'Country:  Peru         Currency : Peruvian sol&#xD;&#xA;Country_currency = &quot;Sol&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centimo&quot;&#xD;&#xA;Decimal_Plural = &quot;Centimo&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;PHP&quot;                          'Country:  Philippines         Currency : Philippine peso&#xD;&#xA;Country_currency = &quot;Peso&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centavo&quot;&#xD;&#xA;Decimal_Plural = &quot;Centavos&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;NZD&quot;                          'Country:  Pitcairn Islands (UK)         Currency : New Zealand dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;PLN&quot;                          'Country:  Poland         Currency : Polish zloty&#xD;&#xA;Country_currency = &quot;Zloty&quot;   &#xD;&#xA;Decimal_Singular = &quot;Grosz&quot;&#xD;&#xA;Decimal_Plural = &quot;Grosz&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;EUR&quot;                          'Country:  Portugal         Currency : European euro&#xD;&#xA;Country_currency = &quot;Euro&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;USD&quot;                          'Country:  Puerto Rico (USA)         Currency : United States dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;QAR&quot;                          'Country:  Qatar         Currency : Qatari riyal&#xD;&#xA;Country_currency = &quot;Rial&quot;   &#xD;&#xA;Decimal_Singular = &quot;Dirham&quot;&#xD;&#xA;Decimal_Plural = &quot;Dirhams&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;EUR&quot;                          'Country:  Reunion (France)         Currency : European euro&#xD;&#xA;Country_currency = &quot;Euro&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;RON&quot;                          'Country:  Romania         Currency : Romanian leu&#xD;&#xA;Country_currency = &quot;Leu&quot;   &#xD;&#xA;Decimal_Singular = &quot;Ban&quot;&#xD;&#xA;Decimal_Plural = &quot;Bani&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;RUB&quot;                          'Country:  Russia         Currency : Russian ruble&#xD;&#xA;Country_currency = &quot;Ruble&quot;   &#xD;&#xA;Decimal_Singular = &quot;Kopek&quot;&#xD;&#xA;Decimal_Plural = &quot;Kopek&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;RWF&quot;                          'Country:  Rwanda         Currency : Rwandan franc&#xD;&#xA;Country_currency = &quot;Franc&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centime&quot;&#xD;&#xA;Decimal_Plural = &quot;Centime&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;USD&quot;                          'Country:  Saba (Netherlands)         Currency : United States dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;EUR&quot;                          'Country:  Saint Barthelemy (France)         Currency : European euro&#xD;&#xA;Country_currency = &quot;Euro&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;SHP&quot;                          'Country:  Saint Helena (UK)         Currency : Saint Helena pound&#xD;&#xA;Country_currency = &quot;Pound&quot;   &#xD;&#xA;Decimal_Singular = &quot;Penny&quot;&#xD;&#xA;Decimal_Plural = &quot;Pence&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;XCD&quot;                          'Country:  Saint Kitts and Nevis         Currency : East Caribbean dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;XCD&quot;                          'Country:  Saint Lucia         Currency : East Caribbean dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;EUR&quot;                          'Country:  Saint Martin (France)         Currency : European euro&#xD;&#xA;Country_currency = &quot;Euro&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;EUR&quot;                          'Country:  Saint Pierre and Miquelon (France)         Currency : European euro&#xD;&#xA;Country_currency = &quot;Euro&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;XCD&quot;                          'Country:  Saint Vincent and the Grenadines         Currency : East Caribbean dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;WST&quot;                          'Country:  Samoa         Currency : Samoan tala&#xD;&#xA;Country_currency = &quot;Tala&quot;   &#xD;&#xA;Decimal_Singular = &quot;Sene&quot;&#xD;&#xA;Decimal_Plural = &quot;Sene&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;EUR&quot;                          'Country:  San Marino         Currency : European euro&#xD;&#xA;Country_currency = &quot;Euro&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;STN&quot;                          'Country:  Sao Tome and Principe         Currency : Sao Tome and Principe dobra&#xD;&#xA;Country_currency = &quot;Dobra&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cêntimo&quot;&#xD;&#xA;Decimal_Plural = &quot;Cêntimo&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;SAR&quot;                          'Country:  Saudi Arabia         Currency : Saudi Arabian riyal&#xD;&#xA;Country_currency = &quot;Rial&quot;   &#xD;&#xA;Decimal_Singular = &quot;Halalah&quot;&#xD;&#xA;Decimal_Plural = &quot;Halalah&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;XOF&quot;                          'Country:  Senegal         Currency : West African CFA franc&#xD;&#xA;Country_currency = &quot;CFA Franc&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centime&quot;&#xD;&#xA;Decimal_Plural = &quot;Centime&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;RSD&quot;                          'Country:  Serbia         Currency : Serbian dinar&#xD;&#xA;Country_currency = &quot;Dinar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Para&quot;&#xD;&#xA;Decimal_Plural = &quot;Paras&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;SCR&quot;                          'Country:  Seychelles         Currency : Seychellois rupee&#xD;&#xA;Country_currency = &quot;Rupee&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;SLL&quot;                          'Country:  Sierra Leone         Currency : Sierra Leonean leone&#xD;&#xA;Country_currency = &quot;Leone&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;SGD&quot;                          'Country:  Singapore         Currency : Singapore dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;USD&quot;                          'Country:  Sint Eustatius (Netherlands)         Currency : United States dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;ANG&quot;                          'Country:  Sint Maarten (Netherlands)         Currency : Netherlands Antillean guilder&#xD;&#xA;Country_currency = &quot;Guilder&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;EUR&quot;                          'Country:  Slovakia         Currency : European euro&#xD;&#xA;Country_currency = &quot;Euro&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;EUR&quot;                          'Country:  Slovenia         Currency : European euro&#xD;&#xA;Country_currency = &quot;Euro&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;SBD&quot;                          'Country:  Solomon Islands         Currency : Solomon Islands dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;SOS&quot;                          'Country:  Somalia         Currency : Somali shilling&#xD;&#xA;Country_currency = &quot;Shilling&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;ZAR&quot;                          'Country:  South Africa         Currency : South African rand&#xD;&#xA;Country_currency = &quot;Rand&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;GBP&quot;                          'Country:  South Georgia Island (UK)         Currency : Pound sterling&#xD;&#xA;Country_currency = &quot;Pound&quot;   &#xD;&#xA;Decimal_Singular = &quot;Penny&quot;&#xD;&#xA;Decimal_Plural = &quot;Pence&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;KRW&quot;                          'Country:  South Korea         Currency : South Korean won&#xD;&#xA;Country_currency = &quot;Won&quot;   &#xD;&#xA;Decimal_Singular = &quot;Jeon&quot;&#xD;&#xA;Decimal_Plural = &quot;Jeon&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;SSP&quot;                          'Country:  South Sudan         Currency : South Sudanese pound&#xD;&#xA;Country_currency = &quot;Pound&quot;   &#xD;&#xA;Decimal_Singular = &quot;Piaster&quot;&#xD;&#xA;Decimal_Plural = &quot;Piasters&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;EUR&quot;                          'Country:  Spain         Currency : European euro&#xD;&#xA;Country_currency = &quot;Euro&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;LKR&quot;                          'Country:  Sri Lanka         Currency : Sri Lankan rupee&#xD;&#xA;Country_currency = &quot;Rupee&quot;   &#xD;&#xA;Decimal_Singular = &quot;Paise&quot;&#xD;&#xA;Decimal_Plural = &quot;Paise&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;SDG&quot;                          'Country:  Sudan         Currency : Sudanese pound&#xD;&#xA;Country_currency = &quot;Pound&quot;   &#xD;&#xA;Decimal_Singular = &quot;Qirsh&quot;&#xD;&#xA;Decimal_Plural = &quot;Qirsh&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;SRD&quot;                          'Country:  Suriname         Currency : Surinamese dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;NOK&quot;                          'Country:  Svalbard and Jan Mayen (Norway)         Currency : Norwegian krone&#xD;&#xA;Country_currency = &quot;Krone&quot;   &#xD;&#xA;Decimal_Singular = &quot;Ore&quot;&#xD;&#xA;Decimal_Plural = &quot;Ore&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;SEK&quot;                          'Country:  Sweden         Currency : Swedish krona&#xD;&#xA;Country_currency = &quot;Krona&quot;   &#xD;&#xA;Decimal_Singular = &quot;Ore&quot;&#xD;&#xA;Decimal_Plural = &quot;Ore&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;CHF&quot;                          'Country:  Switzerland         Currency : Swiss franc&#xD;&#xA;Country_currency = &quot;Franc&quot;   &#xD;&#xA;Decimal_Singular = &quot;Rappen&quot;&#xD;&#xA;Decimal_Plural = &quot;Rappen&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;SYP&quot;                          'Country:  Syria         Currency : Syrian pound&#xD;&#xA;Country_currency = &quot;Pound&quot;   &#xD;&#xA;Decimal_Singular = &quot;Penny&quot;&#xD;&#xA;Decimal_Plural = &quot;Pence&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;TWD&quot;                          'Country:  Taiwan         Currency : New Taiwan dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;TJS&quot;                          'Country:  Tajikistan         Currency : Tajikistani somoni&#xD;&#xA;Country_currency = &quot;Somoni&quot;   &#xD;&#xA;Decimal_Singular = &quot;Diram&quot;&#xD;&#xA;Decimal_Plural = &quot;Dirams&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;TZS&quot;                          'Country:  Tanzania         Currency : Tanzanian shilling&#xD;&#xA;Country_currency = &quot;Shilling&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;THB&quot;                          'Country:  Thailand         Currency : Thai baht&#xD;&#xA;Country_currency = &quot;Baht&quot;   &#xD;&#xA;Decimal_Singular = &quot;Satang&quot;&#xD;&#xA;Decimal_Plural = &quot;Satang&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;USD&quot;                          'Country:  Timor-Leste         Currency : United States dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;XOF&quot;                          'Country:  Togo         Currency : West African CFA franc&#xD;&#xA;Country_currency = &quot;CFA Franc&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centime&quot;&#xD;&#xA;Decimal_Plural = &quot;Centime&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;NZD&quot;                          'Country:  Tokelau (New Zealand)         Currency : New Zealand dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;TOP&quot;                          'Country:  Tonga         Currency : Tongan pa’anga&#xD;&#xA;Country_currency = &quot;Pa’Anga&quot;   &#xD;&#xA;Decimal_Singular = &quot;Seniti&quot;&#xD;&#xA;Decimal_Plural = &quot;Seniti&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;TTD&quot;                          'Country:  Trinidad and Tobago         Currency : Trinidad and Tobago dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;GBP&quot;                          'Country:  Tristan da Cunha (UK)         Currency : Pound sterling&#xD;&#xA;Country_currency = &quot;Pound&quot;   &#xD;&#xA;Decimal_Singular = &quot;Penny&quot;&#xD;&#xA;Decimal_Plural = &quot;Pence&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;TND&quot;                          'Country:  Tunisia         Currency : Tunisian dinar&#xD;&#xA;Country_currency = &quot;Dinar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Millime&quot;&#xD;&#xA;Decimal_Plural = &quot;Millime&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;TRY&quot;                          'Country:  Turkey         Currency : Turkish lira&#xD;&#xA;Country_currency = &quot;Lira&quot;   &#xD;&#xA;Decimal_Singular = &quot;Kurus&quot;&#xD;&#xA;Decimal_Plural = &quot;Kurus&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;TMT&quot;                          'Country:  Turkmenistan         Currency : Turkmen manat&#xD;&#xA;Country_currency = &quot;Manat&quot;   &#xD;&#xA;Decimal_Singular = &quot;Tenge&quot;&#xD;&#xA;Decimal_Plural = &quot;Tenge&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;USD&quot;                          'Country:  Turks and Caicos Islands (UK)         Currency : United States dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;AUD&quot;                          'Country:  Tuvalu         Currency : Australian dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;UGX&quot;                          'Country:  Uganda         Currency : Ugandan shilling&#xD;&#xA;Country_currency = &quot;Shilling&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;UAH&quot;                          'Country:  Ukraine         Currency : Ukrainian hryvnia&#xD;&#xA;Country_currency = &quot;Hryvnia&quot;   &#xD;&#xA;Decimal_Singular = &quot;Kopiyka&quot;&#xD;&#xA;Decimal_Plural = &quot;Kopiyky&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;AED&quot;                          'Country:  United Arab Emirates         Currency : UAE dirham&#xD;&#xA;Country_currency = &quot;Dirham&quot;   &#xD;&#xA;Decimal_Singular = &quot;Fils&quot;&#xD;&#xA;Decimal_Plural = &quot;Fils&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;GBP&quot;                          'Country:  United Kingdom         Currency : Pound sterling&#xD;&#xA;Country_currency = &quot;Pound&quot;   &#xD;&#xA;Decimal_Singular = &quot;Penny&quot;&#xD;&#xA;Decimal_Plural = &quot;Pence&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;USD&quot;                          'Country:  United States of America         Currency : United States dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;UYU&quot;                          'Country:  Uruguay         Currency : Uruguayan peso&#xD;&#xA;Country_currency = &quot;Peso&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centesimo&quot;&#xD;&#xA;Decimal_Plural = &quot;Centesimos&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;USD&quot;                          'Country:  US Virgin Islands (USA)         Currency : United States dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;UZS&quot;                          'Country:  Uzbekistan         Currency : Uzbekistani som&#xD;&#xA;Country_currency = &quot;Soʻm&quot;   &#xD;&#xA;Decimal_Singular = &quot;Tiyin&quot;&#xD;&#xA;Decimal_Plural = &quot;Tiyin&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;VUV&quot;                          'Country:  Vanuatu         Currency : Vanuatu vatu&#xD;&#xA;Country_currency = &quot;Vatu&quot;   &#xD;&#xA;Decimal_Singular = &quot;&quot;&#xD;&#xA;Decimal_Plural = &quot;&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;EUR&quot;                          'Country:  Vatican City (Holy See)         Currency : European euro&#xD;&#xA;Country_currency = &quot;Euro&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;VEF&quot;                          'Country:  Venezuela         Currency : Venezuelan bolivar&#xD;&#xA;Country_currency = &quot;Bolivar Hard&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centimo&quot;&#xD;&#xA;Decimal_Plural = &quot;Centimo&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;VND&quot;                          'Country:  Vietnam         Currency : Vietnamese dong&#xD;&#xA;Country_currency = &quot;Dong&quot;   &#xD;&#xA;Decimal_Singular = &quot;Hao&quot;&#xD;&#xA;Decimal_Plural = &quot;Hao&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;USD&quot;                          'Country:  Wake Island (USA)         Currency : United States dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;XPF&quot;                          'Country:  Wallis and Futuna (France)         Currency : CFP franc&#xD;&#xA;Country_currency = &quot;Franc&quot;   &#xD;&#xA;Decimal_Singular = &quot;Centime&quot;&#xD;&#xA;Decimal_Plural = &quot;Centime&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;YER&quot;                          'Country:  Yemen         Currency : Yemeni rial&#xD;&#xA;Country_currency = &quot;Ryal&quot;   &#xD;&#xA;Decimal_Singular = &quot;Fils&quot;&#xD;&#xA;Decimal_Plural = &quot;Fils&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;ZMW&quot;                          'Country:  Zambia         Currency : Zambian kwacha&#xD;&#xA;Country_currency = &quot;Kwacha&quot;   &#xD;&#xA;Decimal_Singular = &quot;Ngwee&quot;&#xD;&#xA;Decimal_Plural = &quot;Ngwee&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Case &quot;USD&quot;                          'Country:  Zimbabwe         Currency : United States dollar&#xD;&#xA;Country_currency = &quot;Dollar&quot;   &#xD;&#xA;Decimal_Singular = &quot;Cent&quot;&#xD;&#xA;Decimal_Plural = &quot;Cents&quot;&#xD;&#xA;&#xD;&#xA;Case Else : &#xD;&#xA;&#xD;&#xA;Country_currency = &quot;&quot;   &#xD;&#xA;Decimal_Singular = &quot;&quot;&#xD;&#xA;Decimal_Plural = &quot;&quot;&#xD;&#xA;&#xD;&#xA;End Select&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;'''''''''''' COUNTRY TYPE AND CURRENCY ENDS HERE '''''''''''''''''''''&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Select Case Amt_Before_Decimal.replace(&quot; &quot;,&quot;&quot;)&#xD;&#xA;        Case &quot;&quot;&#xD;&#xA;    'Amt_Before_Decimal = &quot;No &quot; &amp; Country_currency&#xD;&#xA;            Amt_Before_Decimal = &quot;&quot;&#xD;&#xA;        Case &quot;One&quot;&#xD;&#xA;            Amt_Before_Decimal = &quot;One &quot; &amp; StrConv(Country_currency,vbProperCase)&#xD;&#xA;         Case Else&#xD;&#xA;If Country_currency &lt;&gt; &quot;&quot; Then&#xD;&#xA;            Amt_Before_Decimal = Amt_Before_Decimal &amp; &quot; &quot; &amp; StrConv(Country_currency,vbProperCase) &amp; &quot;s&quot;&#xD;&#xA;&#xD;&#xA;     Else Amt_Before_Decimal = Amt_Before_Decimal &amp; &quot; &quot; &amp; StrConv(Country_currency,vbProperCase)&#xD;&#xA;End If&#xD;&#xA;&#xD;&#xA;    End Select&#xD;&#xA;&#xD;&#xA;&#xD;&#xA; If Amt_Before_Decimal.replace(&quot; &quot;,&quot;&quot;) = &quot;&quot; Then&#xD;&#xA;  &#xD;&#xA;    Select Case Amt_After_Decimal.replace(&quot; &quot;,&quot;&quot;)&#xD;&#xA;         Case &quot;&quot;&#xD;&#xA;    'Amt_After_Decimal = &quot; No &quot; &amp; Decimal_Plural&#xD;&#xA;            Amt_After_Decimal = &quot;&quot;&#xD;&#xA;        Case &quot;One&quot;&#xD;&#xA;            Amt_After_Decimal = &quot; One &quot; &amp; StrConv(Decimal_Singular,vbProperCase)&#xD;&#xA;              Case Else&#xD;&#xA;            Amt_After_Decimal = &quot; &quot; &amp; Amt_After_Decimal &amp; &quot; &quot; &amp; StrConv(Decimal_Plural,vbProperCase)&#xD;&#xA; End Select&#xD;&#xA; &#xD;&#xA; &#xD;&#xA; Else If Amt_Before_Decimal.replace(&quot; &quot;,&quot;&quot;) &lt;&gt; &quot;&quot; Then&#xD;&#xA; &#xD;&#xA;  Select Case Amt_After_Decimal.replace(&quot; &quot;,&quot;&quot;)&#xD;&#xA;&#xD;&#xA;        Case &quot;&quot;&#xD;&#xA;    'Amt_After_Decimal = &quot; and No &quot; &amp; Decimal_Plural&#xD;&#xA;            Amt_After_Decimal = &quot;&quot;&#xD;&#xA;        Case &quot;One&quot;&#xD;&#xA;            Amt_After_Decimal = &quot; and One &quot; &amp; StrConv(Decimal_Singular,vbProperCase)&#xD;&#xA;              Case Else&#xD;&#xA;            Amt_After_Decimal = &quot; and &quot; &amp; Amt_After_Decimal &amp; &quot; &quot; &amp; StrConv(Decimal_Plural,vbProperCase)&#xD;&#xA;  End Select  &#xD;&#xA;  &#xD;&#xA;  End If    &#xD;&#xA;    &#xD;&#xA;            &#xD;&#xA;&#xD;&#xA;Num2Word = (Amt_Before_Decimal &amp; &quot; &quot; &amp; Amt_After_Decimal).replace(&quot;   &quot;,&quot; &quot;).replace(&quot;  &quot;,&quot; &quot;).Trimstart" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="569,164" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
                    <ui:InvokeCode.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="MyNumber">
                        <Literal x:TypeArguments="x:String">450.00</Literal>
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="Curr_Type">
                        <Literal x:TypeArguments="x:String">GTQ</Literal>
                      </InArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="Num2Word" />
                    </ui:InvokeCode.Arguments>
                  </ui:InvokeCode>
                  <If Condition="[Convert.ToInt32(Math.Round((MontoDec - MontoInt) * 100, 2)) &gt; 0]" sap:VirtualizedContainerService.HintSize="569,207" sap2010:WorkflowViewState.IdRef="If_1">
                    <If.Then>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[Valor]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String" xml:space="preserve">["CON "+ Convert.ToInt32(Math.Round(Decimal.Parse(Monto) - Convert.ToInt64(Math.Truncate( Decimal.Parse(Monto) )) * 100, 2)).ToString()+"/100        ( Q. "+Monto+" )"]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Then>
                    <If.Else>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[Valor]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String" xml:space="preserve">["CON 00/100        ( Q. "+Monto+" )"]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Else>
                  </If>
                </Sequence>
              </ui:CommentOut.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:CommentOut>
            <Sequence sap:VirtualizedContainerService.HintSize="647,1668" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="434,162" sap2010:WorkflowViewState.IdRef="WordReplaceText_1" Replace="[Valor]" ReplaceAll="True" Search="value" />
              <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="434,162" sap2010:WorkflowViewState.IdRef="WordReplaceText_2" Replace="[Fecha]" ReplaceAll="True" Search="date" />
              <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="434,162" sap2010:WorkflowViewState.IdRef="WordReplaceText_3" Replace="[&quot;(&quot;+Agencia +&quot; ) &quot;+AgenciaNom]" ReplaceAll="True" Search="agency" />
              <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="434,162" sap2010:WorkflowViewState.IdRef="WordReplaceText_5" Replace="[Cliente]" ReplaceAll="True" Search="client" />
              <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="434,162" sap2010:WorkflowViewState.IdRef="WordReplaceText_6" Replace="[Carne]" ReplaceAll="True" Search="number" />
              <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="434,162" sap2010:WorkflowViewState.IdRef="WordReplaceText_7" Replace="[Boleta]" ReplaceAll="True" Search="paper" />
              <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="434,162" sap2010:WorkflowViewState.IdRef="WordReplaceText_8" Replace="[FechaHoy]" ReplaceAll="True" Search="today" />
              <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="434,162" sap2010:WorkflowViewState.IdRef="WordReplaceText_13" Replace="[Referencia]" ReplaceAll="True" Search="ref" />
            </Sequence>
            <Sequence sap:VirtualizedContainerService.HintSize="647,66" sap2010:WorkflowViewState.IdRef="Sequence_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="434,162" sap2010:WorkflowViewState.IdRef="WordReplaceText_9" Replace="[NombreFirma]" ReplaceAll="True" Search="namefirm" />
              <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="434,162" sap2010:WorkflowViewState.IdRef="WordReplaceText_10" Replace="[PuestoFirma]" ReplaceAll="True" Search="puesfirm" />
              <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="434,162" sap2010:WorkflowViewState.IdRef="WordReplaceText_11" Replace="[TelFirma]" ReplaceAll="True" Search="numfirm" />
              <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text in Document" sap:VirtualizedContainerService.HintSize="434,162" sap2010:WorkflowViewState.IdRef="WordReplaceText_12" Replace="[ExtFirma]" ReplaceAll="True" Search="extfirm" />
              <p:WordReplacePicture DisplayName="Replace Picture" sap:VirtualizedContainerService.HintSize="434,137" sap2010:WorkflowViewState.IdRef="WordReplacePicture_1" PictureAltText="Firma2" PicturePath="C:\Users\Propa34653\Pictures\Byron Vicente.png" />
            </Sequence>
            <p:WordSaveAs DisplayName="Save Document As" FilePath="Data\Input\Certificacion.docx" sap:VirtualizedContainerService.HintSize="647,167" sap2010:WorkflowViewState.IdRef="WordSaveAs_1" />
          </Sequence>
        </ActivityAction>
      </p:WordApplicationScope.Body>
    </p:WordApplicationScope>
  </Sequence>
</Activity>